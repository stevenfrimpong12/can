{
	"id": "c5edd6dcc711353c90fd72b1b822c8d1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\";\r\n\r\ncontract NftStaker {\r\n    IERC1155 public parentNFT;\r\n\r\n    struct Stake {\r\n        uint256 tokenId;\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    // map staker address to stake details\r\n    mapping(address => Stake) public stakes;\r\n\r\n    // map staker to total staking time \r\n    mapping(address => uint256) public stakingTime;    \r\n\r\n    constructor() {\r\n        parentNFT = IERC1155(0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad); // Change it to your NFT contract addr\r\n    }\r\n\r\n    function stake(uint256 _tokenId, uint256 _amount) public {\r\n        stakes[msg.sender] = Stake(_tokenId, _amount, block.timestamp); \r\n        parentNFT.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, \"0x00\");\r\n    } \r\n\r\n    function unstake() public {\r\n        parentNFT.safeTransferFrom(address(this), msg.sender, stakes[msg.sender].tokenId, stakes[msg.sender].amount, \"0x00\");\r\n        stakingTime[msg.sender] += (block.timestamp - stakes[msg.sender].timestamp);\r\n        delete stakes[msg.sender];\r\n    }      \r\n\r\n     function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4) {\r\n        return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"));\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"NftStaker": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":199:1534  contract NftStaker {\r... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":560:696  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"staking.sol\":606:648  0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad */\n  0x7dd42e364a7bc874b629047a493fd758a578c1ad\n    /* \"staking.sol\":585:594  parentNFT */\n  0x00\n  dup1\n    /* \"staking.sol\":585:649  parentNFT = IERC1155(0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"staking.sol\":199:1534  contract NftStaker {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":199:1534  contract NftStaker {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x583d42fd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":411:450  mapping(address => Stake) public stakes */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":943:1226  function unstake() public {\r... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"staking.sol\":501:547  mapping(address => uint256) public stakingTime */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":704:934  function stake(uint256 _tokenId, uint256 _amount) public {\r... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"staking.sol\":225:250  IERC1155 public parentNFT */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":1241:1529  function onERC1155Received(\r... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":411:450  mapping(address => Stake) public stakes */\n    tag_12:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"staking.sol\":943:1226  function unstake() public {\r... */\n    tag_16:\n        /* \"staking.sol\":980:989  parentNFT */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":980:1006  parentNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"staking.sol\":1015:1019  this */\n      address\n        /* \"staking.sol\":1022:1032  msg.sender */\n      caller\n        /* \"staking.sol\":1034:1040  stakes */\n      0x01\n        /* \"staking.sol\":1034:1052  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1041:1051  msg.sender */\n      caller\n        /* \"staking.sol\":1034:1052  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1034:1060  stakes[msg.sender].tokenId */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":1062:1068  stakes */\n      0x01\n        /* \"staking.sol\":1062:1080  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1069:1079  msg.sender */\n      caller\n        /* \"staking.sol\":1062:1080  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1062:1087  stakes[msg.sender].amount */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":980:1096  parentNFT.safeTransferFrom(address(this), msg.sender, stakes[msg.sender].tokenId, stakes[msg.sender].amount, \"0x00\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":1153:1159  stakes */\n      0x01\n        /* \"staking.sol\":1153:1171  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1160:1170  msg.sender */\n      caller\n        /* \"staking.sol\":1153:1171  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1153:1181  stakes[msg.sender].timestamp */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":1135:1150  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1135:1181  block.timestamp - stakes[msg.sender].timestamp */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"staking.sol\":1107:1118  stakingTime */\n      0x02\n        /* \"staking.sol\":1107:1130  stakingTime[msg.sender] */\n      0x00\n        /* \"staking.sol\":1119:1129  msg.sender */\n      caller\n        /* \"staking.sol\":1107:1130  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"staking.sol\":1107:1182  stakingTime[msg.sender] += (block.timestamp - stakes[msg.sender].timestamp) */\n      dup3\n      dup3\n      sload\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1200:1206  stakes */\n      0x01\n        /* \"staking.sol\":1200:1218  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1207:1217  msg.sender */\n      caller\n        /* \"staking.sol\":1200:1218  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"staking.sol\":1193:1218  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":943:1226  function unstake() public {\r... */\n      jump\t// out\n        /* \"staking.sol\":501:547  mapping(address => uint256) public stakingTime */\n    tag_19:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"staking.sol\":704:934  function stake(uint256 _tokenId, uint256 _amount) public {\r... */\n    tag_25:\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"staking.sol\":799:807  _tokenId */\n      dup4\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"staking.sol\":809:816  _amount */\n      dup3\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"staking.sol\":818:833  block.timestamp */\n      timestamp\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"staking.sol\":772:778  stakes */\n      0x01\n        /* \"staking.sol\":772:790  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":779:789  msg.sender */\n      caller\n        /* \"staking.sol\":772:790  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":772:834  stakes[msg.sender] = Stake(_tokenId, _amount, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"staking.sol\":846:855  parentNFT */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":846:872  parentNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"staking.sol\":873:883  msg.sender */\n      caller\n        /* \"staking.sol\":893:897  this */\n      address\n        /* \"staking.sol\":900:908  _tokenId */\n      dup6\n        /* \"staking.sol\":910:917  _amount */\n      dup6\n        /* \"staking.sol\":846:926  parentNFT.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, \"0x00\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_47:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":704:934  function stake(uint256 _tokenId, uint256 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":225:250  IERC1155 public parentNFT */\n    tag_27:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"staking.sol\":1241:1529  function onERC1155Received(\r... */\n    tag_33:\n        /* \"staking.sol\":1418:1424  bytes4 */\n      0x00\n        /* \"staking.sol\":1451:1520  keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\") */\n      0xf23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97\n        /* \"staking.sol\":1437:1521  return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\")) */\n      swap1\n      pop\n        /* \"staking.sol\":1241:1529  function onERC1155Received(\r... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_53:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_55\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":165:717   */\n    tag_57:\n        /* \"#utility.yul\":222:230   */\n      0x00\n        /* \"#utility.yul\":232:238   */\n      dup1\n        /* \"#utility.yul\":282:285   */\n      dup4\n        /* \"#utility.yul\":275:279   */\n      0x1f\n        /* \"#utility.yul\":267:273   */\n      dup5\n        /* \"#utility.yul\":263:280   */\n      add\n        /* \"#utility.yul\":259:286   */\n      slt\n        /* \"#utility.yul\":249:371   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":290:369   */\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":249:371   */\n    tag_59:\n        /* \"#utility.yul\":403:409   */\n      dup3\n        /* \"#utility.yul\":390:410   */\n      calldataload\n        /* \"#utility.yul\":380:410   */\n      swap1\n      pop\n        /* \"#utility.yul\":433:451   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":425:431   */\n      dup2\n        /* \"#utility.yul\":422:452   */\n      gt\n        /* \"#utility.yul\":419:536   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":455:534   */\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":419:536   */\n    tag_62:\n        /* \"#utility.yul\":569:573   */\n      0x20\n        /* \"#utility.yul\":561:567   */\n      dup4\n        /* \"#utility.yul\":557:574   */\n      add\n        /* \"#utility.yul\":545:574   */\n      swap2\n      pop\n        /* \"#utility.yul\":623:626   */\n      dup4\n        /* \"#utility.yul\":615:619   */\n      0x01\n        /* \"#utility.yul\":607:613   */\n      dup3\n        /* \"#utility.yul\":603:620   */\n      mul\n        /* \"#utility.yul\":593:601   */\n      dup4\n        /* \"#utility.yul\":589:621   */\n      add\n        /* \"#utility.yul\":586:627   */\n      gt\n        /* \"#utility.yul\":583:711   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":630:709   */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":583:711   */\n    tag_65:\n        /* \"#utility.yul\":165:717   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":723:862   */\n    tag_68:\n        /* \"#utility.yul\":769:774   */\n      0x00\n        /* \"#utility.yul\":807:813   */\n      dup2\n        /* \"#utility.yul\":794:814   */\n      calldataload\n        /* \"#utility.yul\":785:814   */\n      swap1\n      pop\n        /* \"#utility.yul\":823:856   */\n      tag_70\n        /* \"#utility.yul\":850:855   */\n      dup2\n        /* \"#utility.yul\":823:856   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":723:862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":868:1197   */\n    tag_11:\n        /* \"#utility.yul\":927:933   */\n      0x00\n        /* \"#utility.yul\":976:978   */\n      0x20\n        /* \"#utility.yul\":964:973   */\n      dup3\n        /* \"#utility.yul\":955:962   */\n      dup5\n        /* \"#utility.yul\":951:974   */\n      sub\n        /* \"#utility.yul\":947:979   */\n      slt\n        /* \"#utility.yul\":944:1063   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":982:1061   */\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":944:1063   */\n    tag_73:\n        /* \"#utility.yul\":1102:1103   */\n      0x00\n        /* \"#utility.yul\":1127:1180   */\n      tag_76\n        /* \"#utility.yul\":1172:1179   */\n      dup5\n        /* \"#utility.yul\":1163:1169   */\n      dup3\n        /* \"#utility.yul\":1152:1161   */\n      dup6\n        /* \"#utility.yul\":1148:1170   */\n      add\n        /* \"#utility.yul\":1127:1180   */\n      tag_53\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1117:1180   */\n      swap2\n      pop\n        /* \"#utility.yul\":1073:1190   */\n      pop\n        /* \"#utility.yul\":868:1197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1203:2312   */\n    tag_32:\n        /* \"#utility.yul\":1309:1315   */\n      0x00\n        /* \"#utility.yul\":1317:1323   */\n      dup1\n        /* \"#utility.yul\":1325:1331   */\n      0x00\n        /* \"#utility.yul\":1333:1339   */\n      dup1\n        /* \"#utility.yul\":1341:1347   */\n      0x00\n        /* \"#utility.yul\":1349:1355   */\n      dup1\n        /* \"#utility.yul\":1398:1401   */\n      0xa0\n        /* \"#utility.yul\":1386:1395   */\n      dup8\n        /* \"#utility.yul\":1377:1384   */\n      dup10\n        /* \"#utility.yul\":1373:1396   */\n      sub\n        /* \"#utility.yul\":1369:1402   */\n      slt\n        /* \"#utility.yul\":1366:1486   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1405:1484   */\n      tag_79\n      tag_75\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1366:1486   */\n    tag_78:\n        /* \"#utility.yul\":1525:1526   */\n      0x00\n        /* \"#utility.yul\":1550:1603   */\n      tag_80\n        /* \"#utility.yul\":1595:1602   */\n      dup10\n        /* \"#utility.yul\":1586:1592   */\n      dup3\n        /* \"#utility.yul\":1575:1584   */\n      dup11\n        /* \"#utility.yul\":1571:1593   */\n      add\n        /* \"#utility.yul\":1550:1603   */\n      tag_53\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1540:1603   */\n      swap7\n      pop\n        /* \"#utility.yul\":1496:1613   */\n      pop\n        /* \"#utility.yul\":1652:1654   */\n      0x20\n        /* \"#utility.yul\":1678:1731   */\n      tag_81\n        /* \"#utility.yul\":1723:1730   */\n      dup10\n        /* \"#utility.yul\":1714:1720   */\n      dup3\n        /* \"#utility.yul\":1703:1712   */\n      dup11\n        /* \"#utility.yul\":1699:1721   */\n      add\n        /* \"#utility.yul\":1678:1731   */\n      tag_53\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1668:1731   */\n      swap6\n      pop\n        /* \"#utility.yul\":1623:1741   */\n      pop\n        /* \"#utility.yul\":1780:1782   */\n      0x40\n        /* \"#utility.yul\":1806:1859   */\n      tag_82\n        /* \"#utility.yul\":1851:1858   */\n      dup10\n        /* \"#utility.yul\":1842:1848   */\n      dup3\n        /* \"#utility.yul\":1831:1840   */\n      dup11\n        /* \"#utility.yul\":1827:1849   */\n      add\n        /* \"#utility.yul\":1806:1859   */\n      tag_68\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1796:1859   */\n      swap5\n      pop\n        /* \"#utility.yul\":1751:1869   */\n      pop\n        /* \"#utility.yul\":1908:1910   */\n      0x60\n        /* \"#utility.yul\":1934:1987   */\n      tag_83\n        /* \"#utility.yul\":1979:1986   */\n      dup10\n        /* \"#utility.yul\":1970:1976   */\n      dup3\n        /* \"#utility.yul\":1959:1968   */\n      dup11\n        /* \"#utility.yul\":1955:1977   */\n      add\n        /* \"#utility.yul\":1934:1987   */\n      tag_68\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1924:1987   */\n      swap4\n      pop\n        /* \"#utility.yul\":1879:1997   */\n      pop\n        /* \"#utility.yul\":2064:2067   */\n      0x80\n        /* \"#utility.yul\":2053:2062   */\n      dup8\n        /* \"#utility.yul\":2049:2068   */\n      add\n        /* \"#utility.yul\":2036:2069   */\n      calldataload\n        /* \"#utility.yul\":2096:2114   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2088:2094   */\n      dup2\n        /* \"#utility.yul\":2085:2115   */\n      gt\n        /* \"#utility.yul\":2082:2199   */\n      iszero\n      tag_84\n      jumpi\n        /* \"#utility.yul\":2118:2197   */\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2082:2199   */\n    tag_84:\n        /* \"#utility.yul\":2231:2295   */\n      tag_87\n        /* \"#utility.yul\":2287:2294   */\n      dup10\n        /* \"#utility.yul\":2278:2284   */\n      dup3\n        /* \"#utility.yul\":2267:2276   */\n      dup11\n        /* \"#utility.yul\":2263:2285   */\n      add\n        /* \"#utility.yul\":2231:2295   */\n      tag_57\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2213:2295   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2007:2305   */\n      pop\n        /* \"#utility.yul\":1203:2312   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":2318:2792   */\n    tag_24:\n        /* \"#utility.yul\":2386:2392   */\n      0x00\n        /* \"#utility.yul\":2394:2400   */\n      dup1\n        /* \"#utility.yul\":2443:2445   */\n      0x40\n        /* \"#utility.yul\":2431:2440   */\n      dup4\n        /* \"#utility.yul\":2422:2429   */\n      dup6\n        /* \"#utility.yul\":2418:2441   */\n      sub\n        /* \"#utility.yul\":2414:2446   */\n      slt\n        /* \"#utility.yul\":2411:2530   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":2449:2528   */\n      tag_90\n      tag_75\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2411:2530   */\n    tag_89:\n        /* \"#utility.yul\":2569:2570   */\n      0x00\n        /* \"#utility.yul\":2594:2647   */\n      tag_91\n        /* \"#utility.yul\":2639:2646   */\n      dup6\n        /* \"#utility.yul\":2630:2636   */\n      dup3\n        /* \"#utility.yul\":2619:2628   */\n      dup7\n        /* \"#utility.yul\":2615:2637   */\n      add\n        /* \"#utility.yul\":2594:2647   */\n      tag_68\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2584:2647   */\n      swap3\n      pop\n        /* \"#utility.yul\":2540:2657   */\n      pop\n        /* \"#utility.yul\":2696:2698   */\n      0x20\n        /* \"#utility.yul\":2722:2775   */\n      tag_92\n        /* \"#utility.yul\":2767:2774   */\n      dup6\n        /* \"#utility.yul\":2758:2764   */\n      dup3\n        /* \"#utility.yul\":2747:2756   */\n      dup7\n        /* \"#utility.yul\":2743:2765   */\n      add\n        /* \"#utility.yul\":2722:2775   */\n      tag_68\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2712:2775   */\n      swap2\n      pop\n        /* \"#utility.yul\":2667:2785   */\n      pop\n        /* \"#utility.yul\":2318:2792   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2798:2916   */\n    tag_93:\n        /* \"#utility.yul\":2885:2909   */\n      tag_95\n        /* \"#utility.yul\":2903:2908   */\n      dup2\n        /* \"#utility.yul\":2885:2909   */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2880:2883   */\n      dup3\n        /* \"#utility.yul\":2873:2910   */\n      mstore\n        /* \"#utility.yul\":2798:2916   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:3037   */\n    tag_97:\n        /* \"#utility.yul\":3007:3030   */\n      tag_99\n        /* \"#utility.yul\":3024:3029   */\n      dup2\n        /* \"#utility.yul\":3007:3030   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3002:3005   */\n      dup3\n        /* \"#utility.yul\":2995:3031   */\n      mstore\n        /* \"#utility.yul\":2922:3037   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3043:3206   */\n    tag_101:\n        /* \"#utility.yul\":3146:3199   */\n      tag_103\n        /* \"#utility.yul\":3193:3198   */\n      dup2\n        /* \"#utility.yul\":3146:3199   */\n      tag_104\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3141:3144   */\n      dup3\n        /* \"#utility.yul\":3134:3200   */\n      mstore\n        /* \"#utility.yul\":3043:3206   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3212:3575   */\n    tag_105:\n        /* \"#utility.yul\":3353:3356   */\n      0x00\n        /* \"#utility.yul\":3374:3439   */\n      tag_107\n        /* \"#utility.yul\":3437:3438   */\n      0x04\n        /* \"#utility.yul\":3432:3435   */\n      dup4\n        /* \"#utility.yul\":3374:3439   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3367:3439   */\n      swap2\n      pop\n        /* \"#utility.yul\":3448:3541   */\n      tag_109\n        /* \"#utility.yul\":3537:3540   */\n      dup3\n        /* \"#utility.yul\":3448:3541   */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3566:3568   */\n      0x20\n        /* \"#utility.yul\":3561:3564   */\n      dup3\n        /* \"#utility.yul\":3557:3569   */\n      add\n        /* \"#utility.yul\":3550:3569   */\n      swap1\n      pop\n        /* \"#utility.yul\":3212:3575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3581:3699   */\n    tag_111:\n        /* \"#utility.yul\":3668:3692   */\n      tag_113\n        /* \"#utility.yul\":3686:3691   */\n      dup2\n        /* \"#utility.yul\":3668:3692   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3663:3666   */\n      dup3\n        /* \"#utility.yul\":3656:3693   */\n      mstore\n        /* \"#utility.yul\":3581:3699   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3705:4564   */\n    tag_38:\n        /* \"#utility.yul\":3982:3986   */\n      0x00\n        /* \"#utility.yul\":4020:4023   */\n      0xa0\n        /* \"#utility.yul\":4009:4018   */\n      dup3\n        /* \"#utility.yul\":4005:4024   */\n      add\n        /* \"#utility.yul\":3997:4024   */\n      swap1\n      pop\n        /* \"#utility.yul\":4034:4105   */\n      tag_116\n        /* \"#utility.yul\":4102:4103   */\n      0x00\n        /* \"#utility.yul\":4091:4100   */\n      dup4\n        /* \"#utility.yul\":4087:4104   */\n      add\n        /* \"#utility.yul\":4078:4084   */\n      dup8\n        /* \"#utility.yul\":4034:4105   */\n      tag_93\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":4115:4187   */\n      tag_117\n        /* \"#utility.yul\":4183:4185   */\n      0x20\n        /* \"#utility.yul\":4172:4181   */\n      dup4\n        /* \"#utility.yul\":4168:4186   */\n      add\n        /* \"#utility.yul\":4159:4165   */\n      dup7\n        /* \"#utility.yul\":4115:4187   */\n      tag_93\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4197:4269   */\n      tag_118\n        /* \"#utility.yul\":4265:4267   */\n      0x40\n        /* \"#utility.yul\":4254:4263   */\n      dup4\n        /* \"#utility.yul\":4250:4268   */\n      add\n        /* \"#utility.yul\":4241:4247   */\n      dup6\n        /* \"#utility.yul\":4197:4269   */\n      tag_111\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4279:4351   */\n      tag_119\n        /* \"#utility.yul\":4347:4349   */\n      0x60\n        /* \"#utility.yul\":4336:4345   */\n      dup4\n        /* \"#utility.yul\":4332:4350   */\n      add\n        /* \"#utility.yul\":4323:4329   */\n      dup5\n        /* \"#utility.yul\":4279:4351   */\n      tag_111\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4399:4408   */\n      dup2\n        /* \"#utility.yul\":4393:4397   */\n      dup2\n        /* \"#utility.yul\":4389:4409   */\n      sub\n        /* \"#utility.yul\":4383:4386   */\n      0x80\n        /* \"#utility.yul\":4372:4381   */\n      dup4\n        /* \"#utility.yul\":4368:4387   */\n      add\n        /* \"#utility.yul\":4361:4410   */\n      mstore\n        /* \"#utility.yul\":4427:4557   */\n      tag_120\n        /* \"#utility.yul\":4552:4556   */\n      dup2\n        /* \"#utility.yul\":4427:4557   */\n      tag_105\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":4419:4557   */\n      swap1\n      pop\n        /* \"#utility.yul\":3705:4564   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4570:4788   */\n    tag_35:\n        /* \"#utility.yul\":4661:4665   */\n      0x00\n        /* \"#utility.yul\":4699:4701   */\n      0x20\n        /* \"#utility.yul\":4688:4697   */\n      dup3\n        /* \"#utility.yul\":4684:4702   */\n      add\n        /* \"#utility.yul\":4676:4702   */\n      swap1\n      pop\n        /* \"#utility.yul\":4712:4781   */\n      tag_122\n        /* \"#utility.yul\":4778:4779   */\n      0x00\n        /* \"#utility.yul\":4767:4776   */\n      dup4\n        /* \"#utility.yul\":4763:4780   */\n      add\n        /* \"#utility.yul\":4754:4760   */\n      dup5\n        /* \"#utility.yul\":4712:4781   */\n      tag_97\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4570:4788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4794:5048   */\n    tag_29:\n        /* \"#utility.yul\":4903:4907   */\n      0x00\n        /* \"#utility.yul\":4941:4943   */\n      0x20\n        /* \"#utility.yul\":4930:4939   */\n      dup3\n        /* \"#utility.yul\":4926:4944   */\n      add\n        /* \"#utility.yul\":4918:4944   */\n      swap1\n      pop\n        /* \"#utility.yul\":4954:5041   */\n      tag_124\n        /* \"#utility.yul\":5038:5039   */\n      0x00\n        /* \"#utility.yul\":5027:5036   */\n      dup4\n        /* \"#utility.yul\":5023:5040   */\n      add\n        /* \"#utility.yul\":5014:5020   */\n      dup5\n        /* \"#utility.yul\":4954:5041   */\n      tag_101\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4794:5048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5276   */\n    tag_21:\n        /* \"#utility.yul\":5147:5151   */\n      0x00\n        /* \"#utility.yul\":5185:5187   */\n      0x20\n        /* \"#utility.yul\":5174:5183   */\n      dup3\n        /* \"#utility.yul\":5170:5188   */\n      add\n        /* \"#utility.yul\":5162:5188   */\n      swap1\n      pop\n        /* \"#utility.yul\":5198:5269   */\n      tag_126\n        /* \"#utility.yul\":5266:5267   */\n      0x00\n        /* \"#utility.yul\":5255:5264   */\n      dup4\n        /* \"#utility.yul\":5251:5268   */\n      add\n        /* \"#utility.yul\":5242:5248   */\n      dup5\n        /* \"#utility.yul\":5198:5269   */\n      tag_111\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5054:5276   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5282:5724   */\n    tag_14:\n        /* \"#utility.yul\":5431:5435   */\n      0x00\n        /* \"#utility.yul\":5469:5471   */\n      0x60\n        /* \"#utility.yul\":5458:5467   */\n      dup3\n        /* \"#utility.yul\":5454:5472   */\n      add\n        /* \"#utility.yul\":5446:5472   */\n      swap1\n      pop\n        /* \"#utility.yul\":5482:5553   */\n      tag_128\n        /* \"#utility.yul\":5550:5551   */\n      0x00\n        /* \"#utility.yul\":5539:5548   */\n      dup4\n        /* \"#utility.yul\":5535:5552   */\n      add\n        /* \"#utility.yul\":5526:5532   */\n      dup7\n        /* \"#utility.yul\":5482:5553   */\n      tag_111\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5563:5635   */\n      tag_129\n        /* \"#utility.yul\":5631:5633   */\n      0x20\n        /* \"#utility.yul\":5620:5629   */\n      dup4\n        /* \"#utility.yul\":5616:5634   */\n      add\n        /* \"#utility.yul\":5607:5613   */\n      dup6\n        /* \"#utility.yul\":5563:5635   */\n      tag_111\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5645:5717   */\n      tag_130\n        /* \"#utility.yul\":5713:5715   */\n      0x40\n        /* \"#utility.yul\":5702:5711   */\n      dup4\n        /* \"#utility.yul\":5698:5716   */\n      add\n        /* \"#utility.yul\":5689:5695   */\n      dup5\n        /* \"#utility.yul\":5645:5717   */\n      tag_111\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5282:5724   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5811:5979   */\n    tag_108:\n        /* \"#utility.yul\":5894:5905   */\n      0x00\n        /* \"#utility.yul\":5928:5934   */\n      dup3\n        /* \"#utility.yul\":5923:5926   */\n      dup3\n        /* \"#utility.yul\":5916:5935   */\n      mstore\n        /* \"#utility.yul\":5968:5972   */\n      0x20\n        /* \"#utility.yul\":5963:5966   */\n      dup3\n        /* \"#utility.yul\":5959:5973   */\n      add\n        /* \"#utility.yul\":5944:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5811:5979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5985:6290   */\n    tag_45:\n        /* \"#utility.yul\":6025:6028   */\n      0x00\n        /* \"#utility.yul\":6044:6064   */\n      tag_135\n        /* \"#utility.yul\":6062:6063   */\n      dup3\n        /* \"#utility.yul\":6044:6064   */\n      tag_114\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6039:6064   */\n      swap2\n      pop\n        /* \"#utility.yul\":6078:6098   */\n      tag_136\n        /* \"#utility.yul\":6096:6097   */\n      dup4\n        /* \"#utility.yul\":6078:6098   */\n      tag_114\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6073:6098   */\n      swap3\n      pop\n        /* \"#utility.yul\":6232:6233   */\n      dup3\n        /* \"#utility.yul\":6164:6230   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6160:6234   */\n      sub\n        /* \"#utility.yul\":6157:6158   */\n      dup3\n        /* \"#utility.yul\":6154:6235   */\n      gt\n        /* \"#utility.yul\":6151:6258   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6238:6256   */\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6151:6258   */\n    tag_137:\n        /* \"#utility.yul\":6282:6283   */\n      dup3\n        /* \"#utility.yul\":6279:6280   */\n      dup3\n        /* \"#utility.yul\":6275:6284   */\n      add\n        /* \"#utility.yul\":6268:6284   */\n      swap1\n      pop\n        /* \"#utility.yul\":5985:6290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6296:6487   */\n    tag_43:\n        /* \"#utility.yul\":6336:6340   */\n      0x00\n        /* \"#utility.yul\":6356:6376   */\n      tag_141\n        /* \"#utility.yul\":6374:6375   */\n      dup3\n        /* \"#utility.yul\":6356:6376   */\n      tag_114\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":6351:6376   */\n      swap2\n      pop\n        /* \"#utility.yul\":6390:6410   */\n      tag_142\n        /* \"#utility.yul\":6408:6409   */\n      dup4\n        /* \"#utility.yul\":6390:6410   */\n      tag_114\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6385:6410   */\n      swap3\n      pop\n        /* \"#utility.yul\":6429:6430   */\n      dup3\n        /* \"#utility.yul\":6426:6427   */\n      dup3\n        /* \"#utility.yul\":6423:6431   */\n      lt\n        /* \"#utility.yul\":6420:6454   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":6434:6452   */\n      tag_144\n      tag_139\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6420:6454   */\n    tag_143:\n        /* \"#utility.yul\":6479:6480   */\n      dup3\n        /* \"#utility.yul\":6476:6477   */\n      dup3\n        /* \"#utility.yul\":6472:6481   */\n      sub\n        /* \"#utility.yul\":6464:6481   */\n      swap1\n      pop\n        /* \"#utility.yul\":6296:6487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6493:6589   */\n    tag_96:\n        /* \"#utility.yul\":6530:6537   */\n      0x00\n        /* \"#utility.yul\":6559:6583   */\n      tag_146\n        /* \"#utility.yul\":6577:6582   */\n      dup3\n        /* \"#utility.yul\":6559:6583   */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6548:6583   */\n      swap1\n      pop\n        /* \"#utility.yul\":6493:6589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6595:6744   */\n    tag_100:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6737   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6738   */\n      and\n        /* \"#utility.yul\":6649:6738   */\n      swap1\n      pop\n        /* \"#utility.yul\":6595:6744   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6750:6876   */\n    tag_147:\n        /* \"#utility.yul\":6787:6794   */\n      0x00\n        /* \"#utility.yul\":6827:6869   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6820:6825   */\n      dup3\n        /* \"#utility.yul\":6816:6870   */\n      and\n        /* \"#utility.yul\":6805:6870   */\n      swap1\n      pop\n        /* \"#utility.yul\":6750:6876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6882:6959   */\n    tag_114:\n        /* \"#utility.yul\":6919:6926   */\n      0x00\n        /* \"#utility.yul\":6948:6953   */\n      dup2\n        /* \"#utility.yul\":6937:6953   */\n      swap1\n      pop\n        /* \"#utility.yul\":6882:6959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6965:7107   */\n    tag_104:\n        /* \"#utility.yul\":7031:7040   */\n      0x00\n        /* \"#utility.yul\":7064:7101   */\n      tag_152\n        /* \"#utility.yul\":7095:7100   */\n      dup3\n        /* \"#utility.yul\":7064:7101   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7051:7101   */\n      swap1\n      pop\n        /* \"#utility.yul\":6965:7107   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7113:7239   */\n    tag_153:\n        /* \"#utility.yul\":7163:7172   */\n      0x00\n        /* \"#utility.yul\":7196:7233   */\n      tag_155\n        /* \"#utility.yul\":7227:7232   */\n      dup3\n        /* \"#utility.yul\":7196:7233   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7183:7233   */\n      swap1\n      pop\n        /* \"#utility.yul\":7113:7239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7245:7358   */\n    tag_156:\n        /* \"#utility.yul\":7295:7304   */\n      0x00\n        /* \"#utility.yul\":7328:7352   */\n      tag_158\n        /* \"#utility.yul\":7346:7351   */\n      dup3\n        /* \"#utility.yul\":7328:7352   */\n      tag_147\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7315:7352   */\n      swap1\n      pop\n        /* \"#utility.yul\":7245:7358   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7364:7544   */\n    tag_139:\n        /* \"#utility.yul\":7412:7489   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7409:7410   */\n      0x00\n        /* \"#utility.yul\":7402:7490   */\n      mstore\n        /* \"#utility.yul\":7509:7513   */\n      0x11\n        /* \"#utility.yul\":7506:7507   */\n      0x04\n        /* \"#utility.yul\":7499:7514   */\n      mstore\n        /* \"#utility.yul\":7533:7537   */\n      0x24\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7523:7538   */\n      revert\n        /* \"#utility.yul\":7550:7667   */\n    tag_64:\n        /* \"#utility.yul\":7659:7660   */\n      0x00\n        /* \"#utility.yul\":7656:7657   */\n      dup1\n        /* \"#utility.yul\":7649:7661   */\n      revert\n        /* \"#utility.yul\":7673:7790   */\n    tag_61:\n        /* \"#utility.yul\":7782:7783   */\n      0x00\n        /* \"#utility.yul\":7779:7780   */\n      dup1\n        /* \"#utility.yul\":7772:7784   */\n      revert\n        /* \"#utility.yul\":7796:7913   */\n    tag_67:\n        /* \"#utility.yul\":7905:7906   */\n      0x00\n        /* \"#utility.yul\":7902:7903   */\n      dup1\n        /* \"#utility.yul\":7895:7907   */\n      revert\n        /* \"#utility.yul\":7919:8036   */\n    tag_86:\n        /* \"#utility.yul\":8028:8029   */\n      0x00\n        /* \"#utility.yul\":8025:8026   */\n      dup1\n        /* \"#utility.yul\":8018:8030   */\n      revert\n        /* \"#utility.yul\":8042:8159   */\n    tag_75:\n        /* \"#utility.yul\":8151:8152   */\n      0x00\n        /* \"#utility.yul\":8148:8149   */\n      dup1\n        /* \"#utility.yul\":8141:8153   */\n      revert\n        /* \"#utility.yul\":8165:8319   */\n    tag_110:\n        /* \"#utility.yul\":8305:8311   */\n      0x3078303000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8301:8302   */\n      0x00\n        /* \"#utility.yul\":8293:8299   */\n      dup3\n        /* \"#utility.yul\":8289:8303   */\n      add\n        /* \"#utility.yul\":8282:8312   */\n      mstore\n        /* \"#utility.yul\":8165:8319   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8325:8447   */\n    tag_56:\n        /* \"#utility.yul\":8398:8422   */\n      tag_167\n        /* \"#utility.yul\":8416:8421   */\n      dup2\n        /* \"#utility.yul\":8398:8422   */\n      tag_96\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":8391:8396   */\n      dup2\n        /* \"#utility.yul\":8388:8423   */\n      eq\n        /* \"#utility.yul\":8378:8441   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":8437:8438   */\n      0x00\n        /* \"#utility.yul\":8434:8435   */\n      dup1\n        /* \"#utility.yul\":8427:8439   */\n      revert\n        /* \"#utility.yul\":8378:8441   */\n    tag_168:\n        /* \"#utility.yul\":8325:8447   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8453:8575   */\n    tag_71:\n        /* \"#utility.yul\":8526:8550   */\n      tag_170\n        /* \"#utility.yul\":8544:8549   */\n      dup2\n        /* \"#utility.yul\":8526:8550   */\n      tag_114\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":8519:8524   */\n      dup2\n        /* \"#utility.yul\":8516:8551   */\n      eq\n        /* \"#utility.yul\":8506:8569   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":8565:8566   */\n      0x00\n        /* \"#utility.yul\":8562:8563   */\n      dup1\n        /* \"#utility.yul\":8555:8567   */\n      revert\n        /* \"#utility.yul\":8506:8569   */\n    tag_171:\n        /* \"#utility.yul\":8453:8575   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fc1953f47887c078e1780dbe37fc037a3aba8af685dd1287bbfab90f794d2bdd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50737dd42e364a7bc874b629047a493fd758a578c1ad6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109ca806100746000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806316934fc4146100675780632def662014610099578063583d42fd146100a35780637b0472f0146100d3578063b8e33fb2146100ef578063f23a6e611461010d575b600080fd5b610081600480360381019061007c9190610576565b61013d565b60405161009093929190610785565b60405180910390f35b6100a1610167565b005b6100bd60048036038101906100b89190610576565b61037b565b6040516100ca919061076a565b60405180910390f35b6100ed60048036038101906100e8919061063d565b610393565b005b6100f76104a3565b604051610104919061074f565b60405180910390f35b610127600480360381019061012291906105a3565b6104c7565b6040516101349190610734565b60405180910390f35b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b815260040161024a94939291906106dc565b600060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b50505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426102ca9190610823565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461031891906107cd565b92505081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090555050565b60026020528060005260406000206000915090505481565b604051806060016040528083815260200182815260200142815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b815260040161046d94939291906106dc565b600060405180830381600087803b15801561048757600080fd5b505af115801561049b573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b60008135905061050581610966565b92915050565b60008083601f84011261052157610520610929565b5b8235905067ffffffffffffffff81111561053e5761053d610924565b5b60208301915083600182028301111561055a5761055961092e565b5b9250929050565b6000813590506105708161097d565b92915050565b60006020828403121561058c5761058b610938565b5b600061059a848285016104f6565b91505092915050565b60008060008060008060a087890312156105c0576105bf610938565b5b60006105ce89828a016104f6565b96505060206105df89828a016104f6565b95505060406105f089828a01610561565b945050606061060189828a01610561565b935050608087013567ffffffffffffffff81111561062257610621610933565b5b61062e89828a0161050b565b92509250509295509295509295565b6000806040838503121561065457610653610938565b5b600061066285828601610561565b925050602061067385828601610561565b9150509250929050565b61068681610857565b82525050565b61069581610869565b82525050565b6106a4816108bf565b82525050565b60006106b76004836107bc565b91506106c28261093d565b602082019050919050565b6106d6816108b5565b82525050565b600060a0820190506106f1600083018761067d565b6106fe602083018661067d565b61070b60408301856106cd565b61071860608301846106cd565b8181036080830152610729816106aa565b905095945050505050565b6000602082019050610749600083018461068c565b92915050565b6000602082019050610764600083018461069b565b92915050565b600060208201905061077f60008301846106cd565b92915050565b600060608201905061079a60008301866106cd565b6107a760208301856106cd565b6107b460408301846106cd565b949350505050565b600082825260208201905092915050565b60006107d8826108b5565b91506107e3836108b5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610818576108176108f5565b5b828201905092915050565b600061082e826108b5565b9150610839836108b5565b92508282101561084c5761084b6108f5565b5b828203905092915050565b600061086282610895565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108ca826108d1565b9050919050565b60006108dc826108e3565b9050919050565b60006108ee82610895565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b61096f81610857565b811461097a57600080fd5b50565b610986816108b5565b811461099157600080fd5b5056fea2646970667358221220fc1953f47887c078e1780dbe37fc037a3aba8af685dd1287bbfab90f794d2bdd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x7DD42E364A7BC874B629047A493FD758A578C1AD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x9CA DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x505 DUP2 PUSH2 0x966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x55A JUMPI PUSH2 0x559 PUSH2 0x92E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x570 DUP2 PUSH2 0x97D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x938 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59A DUP5 DUP3 DUP6 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x938 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP10 DUP3 DUP11 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x5DF DUP10 DUP3 DUP11 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x5F0 DUP10 DUP3 DUP11 ADD PUSH2 0x561 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x601 DUP10 DUP3 DUP11 ADD PUSH2 0x561 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x621 PUSH2 0x933 JUMP JUMPDEST JUMPDEST PUSH2 0x62E DUP10 DUP3 DUP11 ADD PUSH2 0x50B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0x938 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP6 DUP3 DUP7 ADD PUSH2 0x561 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x673 DUP6 DUP3 DUP7 ADD PUSH2 0x561 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x686 DUP2 PUSH2 0x857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x695 DUP2 PUSH2 0x869 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP2 PUSH2 0x8BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 PUSH1 0x4 DUP4 PUSH2 0x7BC JUMP JUMPDEST SWAP2 POP PUSH2 0x6C2 DUP3 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D6 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x6F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x6FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x70B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x718 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x729 DUP2 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x749 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x764 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x69B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x77F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x79A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x7A7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x7B4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E3 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x818 JUMPI PUSH2 0x817 PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82E DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x839 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x862 DUP3 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE DUP3 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x96F DUP2 PUSH2 0x857 JUMP JUMPDEST DUP2 EQ PUSH2 0x97A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x986 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC NOT MSTORE8 DELEGATECALL PUSH25 0x87C078E1780DBE37FC037A3ABA8AF685DD1287BBFAB90F794D 0x2B 0xDD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "199:1335:5:-:0;;;560:136;;;;;;;;;;606:42;585:9;;:64;;;;;;;;;;;;;;;;;;199:1335;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155Received_369": {
									"entryPoint": 1223,
									"id": 369,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@parentNFT_239": {
									"entryPoint": 1187,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_299": {
									"entryPoint": 915,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakes_251": {
									"entryPoint": 317,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTime_255": {
									"entryPoint": 891,
									"id": 255,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_346": {
									"entryPoint": 359,
									"id": 346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 1291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 1443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$121__to_t_address__fromStack_reversed": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1925,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 1980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155_$121_to_t_address": {
									"entryPoint": 2239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2406,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2429,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8578:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "239:478:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "288:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "290:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "290:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "290:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "267:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "275:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "263:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "263:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "282:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "259:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "259:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "252:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:35:6"
															},
															"nodeType": "YulIf",
															"src": "249:122:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "380:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "403:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "390:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "390:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "453:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "455:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "455:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "455:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "425:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "422:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "422:30:6"
															},
															"nodeType": "YulIf",
															"src": "419:117:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "545:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "561:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "569:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "557:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "545:8:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "628:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "630:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "630:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "630:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "593:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "607:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "615:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "603:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "603:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "589:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "589:32:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "623:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "586:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:41:6"
															},
															"nodeType": "YulIf",
															"src": "583:128:6"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "206:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "214:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "222:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "232:6:6",
														"type": ""
													}
												],
												"src": "165:552:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "785:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "807:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "794:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "794:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "785:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "850:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "823:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "753:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "761:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "769:5:6",
														"type": ""
													}
												],
												"src": "723:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "934:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "980:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "982:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "982:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "982:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "955:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "964:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "951:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "976:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "947:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "947:32:6"
															},
															"nodeType": "YulIf",
															"src": "944:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1073:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1088:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1092:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1117:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1152:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1163:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1148:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1148:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1172:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1127:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1117:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "904:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "915:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "927:6:6",
														"type": ""
													}
												],
												"src": "868:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1356:956:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1403:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1405:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1405:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1405:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1386:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1373:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1373:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1398:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1369:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1369:33:6"
															},
															"nodeType": "YulIf",
															"src": "1366:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1496:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1511:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1525:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1515:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1540:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1575:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1586:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1571:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1571:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1595:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1550:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1540:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1623:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1638:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1652:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1642:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1668:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1703:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1714:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1699:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1699:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1723:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1678:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1678:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1668:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1751:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1766:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1780:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1770:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1796:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1831:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1842:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1827:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1827:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1851:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1806:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1806:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1796:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1879:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1894:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1908:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1898:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1959:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1970:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1955:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1955:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1979:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1934:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2007:298:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2022:47:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2053:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2064:3:6",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2049:19:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2036:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:33:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2026:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2116:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2118:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2118:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2118:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2088:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2096:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2085:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2085:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "2082:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2213:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2267:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2278:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2263:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2263:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2287:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2231:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2231:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2213:6:6"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "2221:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1286:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1297:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1309:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1317:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1325:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1333:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1341:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1349:6:6",
														"type": ""
													}
												],
												"src": "1203:1109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2401:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2447:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2449:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2449:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2449:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2422:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2431:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2418:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2418:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2443:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2414:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2414:32:6"
															},
															"nodeType": "YulIf",
															"src": "2411:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2540:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2555:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2569:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2559:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2584:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2619:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2630:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2615:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2615:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2639:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2594:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2594:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2584:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2667:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2682:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2686:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2712:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2747:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2758:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2743:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2743:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2767:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2722:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2722:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2712:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2363:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2374:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2386:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2394:6:6",
														"type": ""
													}
												],
												"src": "2318:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2863:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2880:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2903:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2885:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2885:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2873:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2873:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2873:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2851:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2858:3:6",
														"type": ""
													}
												],
												"src": "2798:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2985:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3002:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3024:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3007:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2995:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2973:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2980:3:6",
														"type": ""
													}
												],
												"src": "2922:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3124:82:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3141:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3193:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155_$121_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3146:46:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:53:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3134:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3134:66:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3112:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3119:3:6",
														"type": ""
													}
												],
												"src": "3043:163:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3357:218:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3367:72:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3432:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3437:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3374:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3374:65:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3367:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3537:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"nodeType": "YulIdentifier",
																	"src": "3448:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3448:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3550:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3561:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3566:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3557:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3345:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3353:3:6",
														"type": ""
													}
												],
												"src": "3212:363:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3646:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3663:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3686:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3668:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3656:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3634:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3641:3:6",
														"type": ""
													}
												],
												"src": "3581:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3987:577:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3997:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4009:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4005:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3997:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4078:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4091:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4102:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4087:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4087:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4034:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4034:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4034:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4159:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4172:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4183:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4115:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4115:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4115:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4241:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4254:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4250:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4250:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4197:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4197:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4197:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4323:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4336:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4347:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4332:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4279:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4279:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4372:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4383:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4393:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4389:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4389:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4361:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4361:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4361:49:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4419:138:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4552:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4427:123:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:130:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4419:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3935:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3947:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3955:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3963:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3971:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3982:4:6",
														"type": ""
													}
												],
												"src": "3705:859:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4666:122:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4676:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4688:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4699:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4684:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4684:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4676:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4754:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4767:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4778:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4763:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4763:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4712:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4712:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4712:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4638:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4650:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4661:4:6",
														"type": ""
													}
												],
												"src": "4570:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4908:140:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4918:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4930:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4941:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4926:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4926:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5014:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5038:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5023:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4954:59:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:87:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4954:87:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$121__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4880:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4892:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4903:4:6",
														"type": ""
													}
												],
												"src": "4794:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5152:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5162:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5174:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5185:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5170:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5170:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5162:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5242:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5255:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5266:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5251:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5251:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5198:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5198:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5198:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5124:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5136:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5147:4:6",
														"type": ""
													}
												],
												"src": "5054:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5436:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5446:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5458:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5469:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5454:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5454:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5446:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5526:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5539:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5550:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5535:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5482:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5482:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5607:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5620:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5631:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5616:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5616:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5563:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5563:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5689:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5702:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5713:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5698:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5645:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5645:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5392:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5404:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5412:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5420:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5431:4:6",
														"type": ""
													}
												],
												"src": "5282:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5770:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5780:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5796:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5790:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5780:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5763:6:6",
														"type": ""
													}
												],
												"src": "5730:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5906:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5923:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5928:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5916:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5944:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5963:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5968:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5959:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5959:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5944:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5878:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5883:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5894:11:6",
														"type": ""
													}
												],
												"src": "5811:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6029:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6039:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6062:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6044:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6039:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6073:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6096:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6078:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6073:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6236:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6238:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6238:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6238:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6157:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6164:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6232:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6160:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6154:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6154:81:6"
															},
															"nodeType": "YulIf",
															"src": "6151:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6268:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6279:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6282:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6275:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6016:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6019:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6025:3:6",
														"type": ""
													}
												],
												"src": "5985:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6351:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6374:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6356:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6356:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6351:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6385:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6408:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6390:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6385:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6432:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6434:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6434:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6434:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6426:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6429:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6423:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:8:6"
															},
															"nodeType": "YulIf",
															"src": "6420:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6464:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6476:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6479:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6472:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6472:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6464:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6327:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6330:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6336:4:6",
														"type": ""
													}
												],
												"src": "6296:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6538:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6548:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6577:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6559:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6548:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6520:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6530:7:6",
														"type": ""
													}
												],
												"src": "6493:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6639:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6649:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6671:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6621:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6631:7:6",
														"type": ""
													}
												],
												"src": "6595:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6795:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6805:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6820:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6827:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6816:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6816:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6805:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6777:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6787:7:6",
														"type": ""
													}
												],
												"src": "6750:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6927:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6937:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6948:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6937:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6909:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6919:7:6",
														"type": ""
													}
												],
												"src": "6882:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7041:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7051:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7095:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7064:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7064:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7051:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155_$121_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7021:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7031:9:6",
														"type": ""
													}
												],
												"src": "6965:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7173:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7183:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7227:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7196:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7196:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7183:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7153:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7163:9:6",
														"type": ""
													}
												],
												"src": "7113:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7305:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7315:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7346:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7328:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7328:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7315:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7285:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7295:9:6",
														"type": ""
													}
												],
												"src": "7245:113:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7392:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7409:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7412:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7402:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7402:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7402:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7506:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7509:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7499:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7499:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7533:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7523:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7364:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7639:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7656:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7659:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7649:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7649:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7649:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "7550:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7762:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7779:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7782:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7772:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7772:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7772:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7673:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7885:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7902:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7905:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7895:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7895:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "7796:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8008:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8025:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8028:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8018:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8018:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7919:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8131:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8148:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8151:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8141:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8141:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8141:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "8042:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8271:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8293:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8301:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8289:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8289:14:6"
																	},
																	{
																		"hexValue": "30783030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8305:6:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8282:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8282:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8282:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8263:6:6",
														"type": ""
													}
												],
												"src": "8165:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8368:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8425:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8434:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8437:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8427:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8427:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8427:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8391:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8416:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8398:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8398:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8388:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8381:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8381:43:6"
															},
															"nodeType": "YulIf",
															"src": "8378:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8361:5:6",
														"type": ""
													}
												],
												"src": "8325:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8496:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8553:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8562:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8565:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8555:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8555:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8555:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8519:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8544:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8526:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8526:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8516:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8516:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8509:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8509:43:6"
															},
															"nodeType": "YulIf",
															"src": "8506:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8489:5:6",
														"type": ""
													}
												],
												"src": "8453:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$121_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$121__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC1155_$121_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"0x00\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806316934fc4146100675780632def662014610099578063583d42fd146100a35780637b0472f0146100d3578063b8e33fb2146100ef578063f23a6e611461010d575b600080fd5b610081600480360381019061007c9190610576565b61013d565b60405161009093929190610785565b60405180910390f35b6100a1610167565b005b6100bd60048036038101906100b89190610576565b61037b565b6040516100ca919061076a565b60405180910390f35b6100ed60048036038101906100e8919061063d565b610393565b005b6100f76104a3565b604051610104919061074f565b60405180910390f35b610127600480360381019061012291906105a3565b6104c7565b6040516101349190610734565b60405180910390f35b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b815260040161024a94939291906106dc565b600060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b50505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426102ca9190610823565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461031891906107cd565b92505081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090555050565b60026020528060005260406000206000915090505481565b604051806060016040528083815260200182815260200142815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b815260040161046d94939291906106dc565b600060405180830381600087803b15801561048757600080fd5b505af115801561049b573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b60008135905061050581610966565b92915050565b60008083601f84011261052157610520610929565b5b8235905067ffffffffffffffff81111561053e5761053d610924565b5b60208301915083600182028301111561055a5761055961092e565b5b9250929050565b6000813590506105708161097d565b92915050565b60006020828403121561058c5761058b610938565b5b600061059a848285016104f6565b91505092915050565b60008060008060008060a087890312156105c0576105bf610938565b5b60006105ce89828a016104f6565b96505060206105df89828a016104f6565b95505060406105f089828a01610561565b945050606061060189828a01610561565b935050608087013567ffffffffffffffff81111561062257610621610933565b5b61062e89828a0161050b565b92509250509295509295509295565b6000806040838503121561065457610653610938565b5b600061066285828601610561565b925050602061067385828601610561565b9150509250929050565b61068681610857565b82525050565b61069581610869565b82525050565b6106a4816108bf565b82525050565b60006106b76004836107bc565b91506106c28261093d565b602082019050919050565b6106d6816108b5565b82525050565b600060a0820190506106f1600083018761067d565b6106fe602083018661067d565b61070b60408301856106cd565b61071860608301846106cd565b8181036080830152610729816106aa565b905095945050505050565b6000602082019050610749600083018461068c565b92915050565b6000602082019050610764600083018461069b565b92915050565b600060208201905061077f60008301846106cd565b92915050565b600060608201905061079a60008301866106cd565b6107a760208301856106cd565b6107b460408301846106cd565b949350505050565b600082825260208201905092915050565b60006107d8826108b5565b91506107e3836108b5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610818576108176108f5565b5b828201905092915050565b600061082e826108b5565b9150610839836108b5565b92508282101561084c5761084b6108f5565b5b828203905092915050565b600061086282610895565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108ca826108d1565b9050919050565b60006108dc826108e3565b9050919050565b60006108ee82610895565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b61096f81610857565b811461097a57600080fd5b50565b610986816108b5565b811461099157600080fd5b5056fea2646970667358221220fc1953f47887c078e1780dbe37fc037a3aba8af685dd1287bbfab90f794d2bdd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x63D JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x734 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x823 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x505 DUP2 PUSH2 0x966 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x521 JUMPI PUSH2 0x520 PUSH2 0x929 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x53E JUMPI PUSH2 0x53D PUSH2 0x924 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x55A JUMPI PUSH2 0x559 PUSH2 0x92E JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x570 DUP2 PUSH2 0x97D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x938 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59A DUP5 DUP3 DUP6 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5C0 JUMPI PUSH2 0x5BF PUSH2 0x938 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5CE DUP10 DUP3 DUP11 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x5DF DUP10 DUP3 DUP11 ADD PUSH2 0x4F6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x5F0 DUP10 DUP3 DUP11 ADD PUSH2 0x561 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x601 DUP10 DUP3 DUP11 ADD PUSH2 0x561 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x622 JUMPI PUSH2 0x621 PUSH2 0x933 JUMP JUMPDEST JUMPDEST PUSH2 0x62E DUP10 DUP3 DUP11 ADD PUSH2 0x50B JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x654 JUMPI PUSH2 0x653 PUSH2 0x938 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x662 DUP6 DUP3 DUP7 ADD PUSH2 0x561 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x673 DUP6 DUP3 DUP7 ADD PUSH2 0x561 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x686 DUP2 PUSH2 0x857 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x695 DUP2 PUSH2 0x869 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x6A4 DUP2 PUSH2 0x8BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 PUSH1 0x4 DUP4 PUSH2 0x7BC JUMP JUMPDEST SWAP2 POP PUSH2 0x6C2 DUP3 PUSH2 0x93D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6D6 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x6F1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x6FE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x67D JUMP JUMPDEST PUSH2 0x70B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x718 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x729 DUP2 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x749 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x68C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x764 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x69B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x77F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x79A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x7A7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6CD JUMP JUMPDEST PUSH2 0x7B4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D8 DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E3 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x818 JUMPI PUSH2 0x817 PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x82E DUP3 PUSH2 0x8B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x839 DUP4 PUSH2 0x8B5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x84C JUMPI PUSH2 0x84B PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x862 DUP3 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CA DUP3 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP3 PUSH2 0x8E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE DUP3 PUSH2 0x895 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x96F DUP2 PUSH2 0x857 JUMP JUMPDEST DUP2 EQ PUSH2 0x97A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x986 DUP2 PUSH2 0x8B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC NOT MSTORE8 DELEGATECALL PUSH25 0x87C078E1780DBE37FC037A3ABA8AF685DD1287BBFAB90F794D 0x2B 0xDD PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "199:1335:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;943:283;;;:::i;:::-;;501:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;704:230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;225:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1241:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;943:283::-;980:9;;;;;;;;;;:26;;;1015:4;1022:10;1034:6;:18;1041:10;1034:18;;;;;;;;;;;;;;;:26;;;1062:6;:18;1069:10;1062:18;;;;;;;;;;;;;;;:25;;;980:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:6;:18;1160:10;1153:18;;;;;;;;;;;;;;;:28;;;1135:15;:46;;;;:::i;:::-;1107:11;:23;1119:10;1107:23;;;;;;;;;;;;;;;;:75;;;;;;;:::i;:::-;;;;;;;;1200:6;:18;1207:10;1200:18;;;;;;;;;;;;;;;;1193:25;;;;;;;;;;;;;;;;;;;;943:283::o;501:46::-;;;;;;;;;;;;;;;;;:::o;704:230::-;793:41;;;;;;;;799:8;793:41;;;;809:7;793:41;;;;818:15;793:41;;;772:6;:18;779:10;772:18;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;846:9;;;;;;;;;;:26;;;873:10;893:4;900:8;910:7;846:80;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:230;;:::o;225:25::-;;;;;;;;;;;;:::o;1241:288::-;1418:6;1451:69;1437:84;;1241:288;;;;;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;165:552::-;222:8;232:6;282:3;275:4;267:6;263:17;259:27;249:122;;290:79;;:::i;:::-;249:122;403:6;390:20;380:30;;433:18;425:6;422:30;419:117;;;455:79;;:::i;:::-;419:117;569:4;561:6;557:17;545:29;;623:3;615:4;607:6;603:17;593:8;589:32;586:41;583:128;;;630:79;;:::i;:::-;583:128;165:552;;;;;:::o;723:139::-;769:5;807:6;794:20;785:29;;823:33;850:5;823:33;:::i;:::-;723:139;;;;:::o;868:329::-;927:6;976:2;964:9;955:7;951:23;947:32;944:119;;;982:79;;:::i;:::-;944:119;1102:1;1127:53;1172:7;1163:6;1152:9;1148:22;1127:53;:::i;:::-;1117:63;;1073:117;868:329;;;;:::o;1203:1109::-;1309:6;1317;1325;1333;1341;1349;1398:3;1386:9;1377:7;1373:23;1369:33;1366:120;;;1405:79;;:::i;:::-;1366:120;1525:1;1550:53;1595:7;1586:6;1575:9;1571:22;1550:53;:::i;:::-;1540:63;;1496:117;1652:2;1678:53;1723:7;1714:6;1703:9;1699:22;1678:53;:::i;:::-;1668:63;;1623:118;1780:2;1806:53;1851:7;1842:6;1831:9;1827:22;1806:53;:::i;:::-;1796:63;;1751:118;1908:2;1934:53;1979:7;1970:6;1959:9;1955:22;1934:53;:::i;:::-;1924:63;;1879:118;2064:3;2053:9;2049:19;2036:33;2096:18;2088:6;2085:30;2082:117;;;2118:79;;:::i;:::-;2082:117;2231:64;2287:7;2278:6;2267:9;2263:22;2231:64;:::i;:::-;2213:82;;;;2007:298;1203:1109;;;;;;;;:::o;2318:474::-;2386:6;2394;2443:2;2431:9;2422:7;2418:23;2414:32;2411:119;;;2449:79;;:::i;:::-;2411:119;2569:1;2594:53;2639:7;2630:6;2619:9;2615:22;2594:53;:::i;:::-;2584:63;;2540:117;2696:2;2722:53;2767:7;2758:6;2747:9;2743:22;2722:53;:::i;:::-;2712:63;;2667:118;2318:474;;;;;:::o;2798:118::-;2885:24;2903:5;2885:24;:::i;:::-;2880:3;2873:37;2798:118;;:::o;2922:115::-;3007:23;3024:5;3007:23;:::i;:::-;3002:3;2995:36;2922:115;;:::o;3043:163::-;3146:53;3193:5;3146:53;:::i;:::-;3141:3;3134:66;3043:163;;:::o;3212:363::-;3353:3;3374:65;3437:1;3432:3;3374:65;:::i;:::-;3367:72;;3448:93;3537:3;3448:93;:::i;:::-;3566:2;3561:3;3557:12;3550:19;;3212:363;;;:::o;3581:118::-;3668:24;3686:5;3668:24;:::i;:::-;3663:3;3656:37;3581:118;;:::o;3705:859::-;3982:4;4020:3;4009:9;4005:19;3997:27;;4034:71;4102:1;4091:9;4087:17;4078:6;4034:71;:::i;:::-;4115:72;4183:2;4172:9;4168:18;4159:6;4115:72;:::i;:::-;4197;4265:2;4254:9;4250:18;4241:6;4197:72;:::i;:::-;4279;4347:2;4336:9;4332:18;4323:6;4279:72;:::i;:::-;4399:9;4393:4;4389:20;4383:3;4372:9;4368:19;4361:49;4427:130;4552:4;4427:130;:::i;:::-;4419:138;;3705:859;;;;;;;:::o;4570:218::-;4661:4;4699:2;4688:9;4684:18;4676:26;;4712:69;4778:1;4767:9;4763:17;4754:6;4712:69;:::i;:::-;4570:218;;;;:::o;4794:254::-;4903:4;4941:2;4930:9;4926:18;4918:26;;4954:87;5038:1;5027:9;5023:17;5014:6;4954:87;:::i;:::-;4794:254;;;;:::o;5054:222::-;5147:4;5185:2;5174:9;5170:18;5162:26;;5198:71;5266:1;5255:9;5251:17;5242:6;5198:71;:::i;:::-;5054:222;;;;:::o;5282:442::-;5431:4;5469:2;5458:9;5454:18;5446:26;;5482:71;5550:1;5539:9;5535:17;5526:6;5482:71;:::i;:::-;5563:72;5631:2;5620:9;5616:18;5607:6;5563:72;:::i;:::-;5645;5713:2;5702:9;5698:18;5689:6;5645:72;:::i;:::-;5282:442;;;;;;:::o;5811:168::-;5894:11;5928:6;5923:3;5916:19;5968:4;5963:3;5959:14;5944:29;;5811:168;;;;:::o;5985:305::-;6025:3;6044:20;6062:1;6044:20;:::i;:::-;6039:25;;6078:20;6096:1;6078:20;:::i;:::-;6073:25;;6232:1;6164:66;6160:74;6157:1;6154:81;6151:107;;;6238:18;;:::i;:::-;6151:107;6282:1;6279;6275:9;6268:16;;5985:305;;;;:::o;6296:191::-;6336:4;6356:20;6374:1;6356:20;:::i;:::-;6351:25;;6390:20;6408:1;6390:20;:::i;:::-;6385:25;;6429:1;6426;6423:8;6420:34;;;6434:18;;:::i;:::-;6420:34;6479:1;6476;6472:9;6464:17;;6296:191;;;;:::o;6493:96::-;6530:7;6559:24;6577:5;6559:24;:::i;:::-;6548:35;;6493:96;;;:::o;6595:149::-;6631:7;6671:66;6664:5;6660:78;6649:89;;6595:149;;;:::o;6750:126::-;6787:7;6827:42;6820:5;6816:54;6805:65;;6750:126;;;:::o;6882:77::-;6919:7;6948:5;6937:16;;6882:77;;;:::o;6965:142::-;7031:9;7064:37;7095:5;7064:37;:::i;:::-;7051:50;;6965:142;;;:::o;7113:126::-;7163:9;7196:37;7227:5;7196:37;:::i;:::-;7183:50;;7113:126;;;:::o;7245:113::-;7295:9;7328:24;7346:5;7328:24;:::i;:::-;7315:37;;7245:113;;;:::o;7364:180::-;7412:77;7409:1;7402:88;7509:4;7506:1;7499:15;7533:4;7530:1;7523:15;7550:117;7659:1;7656;7649:12;7673:117;7782:1;7779;7772:12;7796:117;7905:1;7902;7895:12;7919:117;8028:1;8025;8018:12;8042:117;8151:1;8148;8141:12;8165:154;8305:6;8301:1;8293:6;8289:14;8282:30;8165:154;:::o;8325:122::-;8398:24;8416:5;8398:24;:::i;:::-;8391:5;8388:35;8378:63;;8437:1;8434;8427:12;8378:63;8325:122;:::o;8453:::-;8526:24;8544:5;8526:24;:::i;:::-;8519:5;8516:35;8506:63;;8565:1;8562;8555:12;8506:63;8453:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "501200",
								"executionCost": "24804",
								"totalCost": "526004"
							},
							"external": {
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"parentNFT()": "2663",
								"stake(uint256,uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingTime(address)": "2836",
								"unstake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 696,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 696,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 696,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 606,
									"end": 648,
									"name": "PUSH",
									"source": 5,
									"value": "7DD42E364A7BC874B629047A493FD758A578C1AD"
								},
								{
									"begin": 585,
									"end": 594,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 594,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 585,
									"end": 649,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 649,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 649,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc1953f47887c078e1780dbe37fc037a3aba8af685dd1287bbfab90f794d2bdd64736f6c63430008070033",
									".code": [
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "16934FC4"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "2DEF6620"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "583D42FD"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "7B0472F0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "B8E33FB2"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "F23A6E61"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1006,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1006,
											"name": "PUSH",
											"source": 5,
											"value": "F242432A"
										},
										{
											"begin": 1015,
											"end": 1019,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1032,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1051,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1060,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1087,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1062,
											"end": 1087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1087,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1153,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1181,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1129,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1217,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 807,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 809,
											"end": 816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 818,
											"end": 833,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 778,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 789,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 846,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 872,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 846,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "F242432A"
										},
										{
											"begin": 873,
											"end": 883,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 893,
											"end": 897,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 900,
											"end": 908,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1520,
											"name": "PUSH",
											"source": 5,
											"value": "F23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97"
										},
										{
											"begin": 1437,
											"end": 1521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 165,
											"end": 717,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 165,
											"end": 717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 222,
											"end": 230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 282,
											"end": 285,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 275,
											"end": 279,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 267,
											"end": 273,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 263,
											"end": 280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 286,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 249,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 249,
											"end": 371,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 290,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 290,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 290,
											"end": 369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 369,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 290,
											"end": 369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 249,
											"end": 371,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 249,
											"end": 371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 403,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 390,
											"end": 410,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 380,
											"end": 410,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 380,
											"end": 410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 433,
											"end": 451,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 431,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 422,
											"end": 452,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 419,
											"end": 536,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 419,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 419,
											"end": 536,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 455,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 455,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 455,
											"end": 534,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 455,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 455,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 419,
											"end": 536,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 419,
											"end": 536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 567,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 557,
											"end": 574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 623,
											"end": 626,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 615,
											"end": 619,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 607,
											"end": 613,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 603,
											"end": 620,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 593,
											"end": 601,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 589,
											"end": 621,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 586,
											"end": 627,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 583,
											"end": 711,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 583,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 711,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 630,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 630,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 630,
											"end": 709,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 630,
											"end": 709,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 630,
											"end": 709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 583,
											"end": 711,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 583,
											"end": 711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 165,
											"end": 717,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 165,
											"end": 717,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 165,
											"end": 717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 165,
											"end": 717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 165,
											"end": 717,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 862,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 723,
											"end": 862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 807,
											"end": 813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 794,
											"end": 814,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 785,
											"end": 814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 785,
											"end": 814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 823,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 850,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 823,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 823,
											"end": 856,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 823,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 823,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 723,
											"end": 862,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 723,
											"end": 862,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 723,
											"end": 862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 723,
											"end": 862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 723,
											"end": 862,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 868,
											"end": 1197,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 868,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 927,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 978,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 973,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 955,
											"end": 962,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 951,
											"end": 974,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 947,
											"end": 979,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1063,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 944,
											"end": 1063,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 982,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 982,
											"end": 1061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 982,
											"end": 1061,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 982,
											"end": 1061,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 982,
											"end": 1061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1063,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 944,
											"end": 1063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1127,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1172,
											"end": 1179,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1152,
											"end": 1161,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1170,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1127,
											"end": 1180,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1127,
											"end": 1180,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1127,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1180,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1073,
											"end": 1190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 868,
											"end": 1197,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 868,
											"end": 1197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 868,
											"end": 1197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 868,
											"end": 1197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 868,
											"end": 1197,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1309,
											"end": 1315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1355,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1398,
											"end": 1401,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1402,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1486,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1366,
											"end": 1486,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1405,
											"end": 1484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1366,
											"end": 1486,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1366,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1525,
											"end": 1526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1595,
											"end": 1602,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1584,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1593,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1550,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1603,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 1603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1652,
											"end": 1654,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1678,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1720,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1678,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1678,
											"end": 1731,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1731,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1678,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1731,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1623,
											"end": 1741,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1840,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1827,
											"end": 1849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1806,
											"end": 1859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1806,
											"end": 1859,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1806,
											"end": 1859,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1806,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1859,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 1869,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1910,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1934,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1979,
											"end": 1986,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 1976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1934,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1934,
											"end": 1987,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1987,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1934,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1987,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1987,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2067,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2053,
											"end": 2062,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2068,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2069,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2115,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2199,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2082,
											"end": 2199,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2118,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2118,
											"end": 2197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 2118,
											"end": 2197,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2118,
											"end": 2197,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2118,
											"end": 2197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2082,
											"end": 2199,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2082,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2278,
											"end": 2284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2267,
											"end": 2276,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2231,
											"end": 2295,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2231,
											"end": 2295,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2231,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2295,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2295,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2007,
											"end": 2305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1203,
											"end": 2312,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2394,
											"end": 2400,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2431,
											"end": 2440,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2422,
											"end": 2429,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2418,
											"end": 2441,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2446,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2530,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2411,
											"end": 2530,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2449,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2449,
											"end": 2528,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2449,
											"end": 2528,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 2449,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2411,
											"end": 2530,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 2411,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2570,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2639,
											"end": 2646,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2594,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2594,
											"end": 2647,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2594,
											"end": 2647,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2594,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2647,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2722,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2767,
											"end": 2774,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2756,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2722,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2722,
											"end": 2775,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2722,
											"end": 2775,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2722,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2775,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2775,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2318,
											"end": 2792,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2903,
											"end": 2908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2885,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2883,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 2910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2916,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2922,
											"end": 3037,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2922,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3024,
											"end": 3029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3007,
											"end": 3030,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3007,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 3007,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3002,
											"end": 3005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 3037,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3043,
											"end": 3206,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3043,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3193,
											"end": 3198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3146,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3206,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3206,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3212,
											"end": 3575,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3212,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3437,
											"end": 3438,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3432,
											"end": 3435,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3374,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3374,
											"end": 3439,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3374,
											"end": 3439,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3374,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3439,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3439,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3537,
											"end": 3540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3448,
											"end": 3541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3541,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3448,
											"end": 3541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3561,
											"end": 3564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3212,
											"end": 3575,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3581,
											"end": 3699,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3581,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3668,
											"end": 3692,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3668,
											"end": 3692,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3668,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3693,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3699,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4102,
											"end": 4103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4100,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4087,
											"end": 4104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4078,
											"end": 4084,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4034,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4034,
											"end": 4105,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4034,
											"end": 4105,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4034,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4172,
											"end": 4181,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4168,
											"end": 4186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4159,
											"end": 4165,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4115,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4115,
											"end": 4187,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4115,
											"end": 4187,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4115,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4265,
											"end": 4267,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4254,
											"end": 4263,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4250,
											"end": 4268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4197,
											"end": 4269,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4197,
											"end": 4269,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4197,
											"end": 4269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4347,
											"end": 4349,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4336,
											"end": 4345,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4279,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4399,
											"end": 4408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 4397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4389,
											"end": 4409,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4386,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4361,
											"end": 4410,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4552,
											"end": 4556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4427,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 4427,
											"end": 4557,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4427,
											"end": 4557,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4427,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4557,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4419,
											"end": 4557,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 4564,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4570,
											"end": 4788,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4570,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4661,
											"end": 4665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4699,
											"end": 4701,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4684,
											"end": 4702,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4676,
											"end": 4702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4778,
											"end": 4779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4776,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4763,
											"end": 4780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4760,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4712,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 4712,
											"end": 4781,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4712,
											"end": 4781,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4712,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4788,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4788,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4788,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4788,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4794,
											"end": 5048,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 4794,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4943,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4944,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4954,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5023,
											"end": 5040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5014,
											"end": 5020,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4954,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 4954,
											"end": 5041,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4954,
											"end": 5041,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4954,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 5048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 5048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 5048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 5048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4794,
											"end": 5048,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5054,
											"end": 5276,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5054,
											"end": 5276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5147,
											"end": 5151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5187,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5174,
											"end": 5183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5170,
											"end": 5188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5162,
											"end": 5188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5266,
											"end": 5267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5264,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5198,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5276,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5276,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5276,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5471,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5458,
											"end": 5467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5454,
											"end": 5472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5482,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5548,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5526,
											"end": 5532,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5482,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5482,
											"end": 5553,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5482,
											"end": 5553,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5482,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5631,
											"end": 5633,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5629,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5607,
											"end": 5613,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5563,
											"end": 5635,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5563,
											"end": 5635,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5563,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5713,
											"end": 5715,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5695,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5645,
											"end": 5717,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5645,
											"end": 5717,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5645,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5724,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5811,
											"end": 5979,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5811,
											"end": 5979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 5905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5934,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 5926,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5916,
											"end": 5935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5968,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 5973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5944,
											"end": 5973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5979,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5979,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5985,
											"end": 6290,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5985,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6062,
											"end": 6063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6044,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6044,
											"end": 6064,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6044,
											"end": 6064,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 6044,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6078,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6098,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6230,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6160,
											"end": 6234,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6154,
											"end": 6235,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6258,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6151,
											"end": 6258,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6238,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6151,
											"end": 6258,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 6151,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6280,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6268,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6290,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6290,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6296,
											"end": 6487,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 6296,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6336,
											"end": 6340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6374,
											"end": 6375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6356,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6351,
											"end": 6376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6385,
											"end": 6410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6427,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6423,
											"end": 6431,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6454,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6420,
											"end": 6454,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6434,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6420,
											"end": 6454,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6420,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6480,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6476,
											"end": 6477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6481,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6487,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6487,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6487,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6296,
											"end": 6487,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6493,
											"end": 6589,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 6493,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6530,
											"end": 6537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6559,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6577,
											"end": 6582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6559,
											"end": 6583,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6559,
											"end": 6583,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6559,
											"end": 6583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6493,
											"end": 6589,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6595,
											"end": 6744,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6595,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6737,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6660,
											"end": 6738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6738,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6744,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6744,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6750,
											"end": 6876,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6750,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6787,
											"end": 6794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6869,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 6870,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6805,
											"end": 6870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6805,
											"end": 6870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6750,
											"end": 6876,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6882,
											"end": 6959,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 6882,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6953,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6953,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6937,
											"end": 6953,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6959,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6882,
											"end": 6959,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6965,
											"end": 7107,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 6965,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7095,
											"end": 7100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7064,
											"end": 7101,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7064,
											"end": 7101,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7064,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7101,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7051,
											"end": 7101,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6965,
											"end": 7107,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7113,
											"end": 7239,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7113,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7196,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 7227,
											"end": 7232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7196,
											"end": 7233,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7196,
											"end": 7233,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 7196,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7183,
											"end": 7233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7183,
											"end": 7233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7113,
											"end": 7239,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7245,
											"end": 7358,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7245,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7295,
											"end": 7304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7346,
											"end": 7351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7328,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7315,
											"end": 7352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7315,
											"end": 7352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7358,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7358,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7364,
											"end": 7544,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 7364,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7489,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7409,
											"end": 7410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 7506,
											"end": 7507,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7499,
											"end": 7514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7538,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7550,
											"end": 7667,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 7550,
											"end": 7667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7659,
											"end": 7660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7649,
											"end": 7661,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7673,
											"end": 7790,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 7673,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7779,
											"end": 7780,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7772,
											"end": 7784,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7796,
											"end": 7913,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 7796,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 7906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7902,
											"end": 7903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7895,
											"end": 7907,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7919,
											"end": 8036,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 7919,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8028,
											"end": 8029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8025,
											"end": 8026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8030,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8159,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 8042,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8319,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 8165,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8305,
											"end": 8311,
											"name": "PUSH",
											"source": 6,
											"value": "3078303000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8301,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8289,
											"end": 8303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8312,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8319,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8325,
											"end": 8447,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8325,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8416,
											"end": 8421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8398,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 8398,
											"end": 8422,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8398,
											"end": 8422,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8398,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8391,
											"end": 8396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8388,
											"end": 8423,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8378,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8378,
											"end": 8441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8434,
											"end": 8435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8427,
											"end": 8439,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8378,
											"end": 8441,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8378,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8447,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8453,
											"end": 8575,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 8453,
											"end": 8575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8544,
											"end": 8549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8526,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 8526,
											"end": 8550,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8526,
											"end": 8550,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8526,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8524,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8516,
											"end": 8551,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8506,
											"end": 8569,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8565,
											"end": 8566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8562,
											"end": 8563,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8555,
											"end": 8567,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8569,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8506,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8575,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"parentNFT()": "b8e33fb2",
							"stake(uint256,uint256)": "7b0472f0",
							"stakes(address)": "16934fc4",
							"stakingTime(address)": "583d42fd",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"NftStaker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"staking.sol\":{\"keccak256\":\"0x681cdf87a9853ef8caae3d645673ce008b1e7a1e91934f081a2096489181952e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fff670bafb817688d7a9351ba69eba5c3c404649d7b8c157a3fca004ee3c10a\",\"dweb:/ipfs/QmXyFqokM5vA3MTXaVwJnmY6BjbQW1HHLNfhfKs8PzpSSW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 239,
								"contract": "staking.sol:NftStaker",
								"label": "parentNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC1155)121"
							},
							{
								"astId": 251,
								"contract": "staking.sol:NftStaker",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Stake)246_storage)"
							},
							{
								"astId": 255,
								"contract": "staking.sol:NftStaker",
								"label": "stakingTime",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155)121": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)246_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NftStaker.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)246_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)246_storage": {
								"encoding": "inplace",
								"label": "struct NftStaker.Stake",
								"members": [
									{
										"astId": 241,
										"contract": "staking.sol:NftStaker",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "staking.sol:NftStaker",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 245,
										"contract": "staking.sol:NftStaker",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:38:9:\n   |\n38 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1294,
					"file": "staking.sol",
					"start": 1278
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:39:9:\n   |\n39 |         address from,\n   |         ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1317,
					"file": "staking.sol",
					"start": 1305
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:40:9:\n   |\n40 |         uint256 id,\n   |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1338,
					"file": "staking.sol",
					"start": 1328
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:41:9:\n   |\n41 |         uint256 value,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1362,
					"file": "staking.sol",
					"start": 1349
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:42:9:\n   |\n42 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1392,
					"file": "staking.sol",
					"start": 1373
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> staking.sol:37:6:\n   |\n37 |      function onERC1155Received(\n   |      ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1529,
					"file": "staking.sol",
					"start": 1241
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"IERC165": [
							232
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 233,
							"src": "120:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "357:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								232
							],
							"name": "IERC1155",
							"nameLocation": "345:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 18,
									"name": "TransferSingle",
									"nameLocation": "503:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "518:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "544:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "566:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "586:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:0"
									},
									"src": "497:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 33,
									"name": "TransferBatch",
									"nameLocation": "774:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "797:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "831:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "861:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "889:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "912:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:0"
									},
									"src": "768:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1114:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1139:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:0"
									},
									"src": "1093:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 49,
									"name": "URI",
									"nameLocation": "1540:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:0"
									},
									"src": "1534:44:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1798:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:0"
									},
									"scope": 121,
									"src": "1762:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2065:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2094:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2165:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:0"
									},
									"scope": 121,
									"src": "2041:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2469:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:0"
									},
									"scope": 121,
									"src": "2442:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:0"
									},
									"scope": 121,
									"src": "2657:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3374:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3438:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:0"
									},
									"scope": 121,
									"src": "3317:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3956:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3988:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4024:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:0"
									},
									"scope": 121,
									"src": "3874:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "335:3726:0",
							"usedErrors": []
						}
					],
					"src": "95:3967:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							232
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 233,
							"src": "143:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "262:7:1"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 125,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:1",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								232
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:1",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1211:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1234:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1278:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 140,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:1"
									},
									"scope": 162,
									"src": "1107:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:1",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2332:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2380:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 150,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2412:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 153,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2447:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2491:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:1"
									},
									"scope": 162,
									"src": "2291:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "232:2269:1",
							"usedErrors": []
						}
					],
					"src": "118:2384:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							196
						],
						"ERC165": [
							220
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							232
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 163,
							"src": "133:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 221,
							"src": "167:49:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 168,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "295:6:2"
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:2"
								},
								{
									"baseName": {
										"id": 170,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "303:16:2"
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								162,
								220,
								232
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										219,
										231
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "495:113:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 182,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "512:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 184,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "532:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 183,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$162",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 190,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "589:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 188,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$196_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "565:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 181,
												"id": 193,
												"nodeType": "Return",
												"src": "505:96:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 178,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 176,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 220,
												"src": "463:6:2"
											},
											{
												"id": 177,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "471:7:2"
											}
										],
										"src": "454:25:2"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "414:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "489:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:2"
									},
									"scope": 196,
									"src": "387:221:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 197,
							"src": "258:352:2",
							"usedErrors": []
						}
					],
					"src": "108:503:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							220
						],
						"IERC165": [
							232
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 233,
							"src": "124:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "754:7:3"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								232
							],
							"name": "ERC165",
							"nameLocation": "744:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										231
									],
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "920:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 211,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "937:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 213,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "957:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$232_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$232_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 212,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$232",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 210,
												"id": 217,
												"nodeType": "Return",
												"src": "930:47:3"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:3"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "856:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:3"
									},
									"scope": 220,
									"src": "829:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 221,
							"src": "726:260:3",
							"usedErrors": []
						}
					],
					"src": "99:888:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC165",
							"nameLocation": "415:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "801:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 225,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:4"
									},
									"scope": 232,
									"src": "774:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "405:447:4",
							"usedErrors": []
						}
					],
					"src": "100:753:4"
				},
				"id": 4
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							196
						],
						"ERC165": [
							220
						],
						"IERC1155": [
							121
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							232
						],
						"NftStaker": [
							370
						]
					},
					"id": 371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 371,
							"sourceUnit": 122,
							"src": "60:60:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 371,
							"sourceUnit": 197,
							"src": "122:73:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 370,
							"linearizedBaseContracts": [
								370
							],
							"name": "NftStaker",
							"nameLocation": "208:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 239,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "241:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "225:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$121",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 238,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 237,
											"name": "IERC1155",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 121,
											"src": "225:8:5"
										},
										"referencedDeclaration": 121,
										"src": "225:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$121",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NftStaker.Stake",
									"id": 246,
									"members": [
										{
											"constant": false,
											"id": 241,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "291:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 246,
											"src": "283:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 240,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "317:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 246,
											"src": "309:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 242,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "309:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 245,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "342:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 246,
											"src": "334:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 244,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "334:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "266:5:5",
									"nodeType": "StructDefinition",
									"scope": 370,
									"src": "259:100:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 251,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "444:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "411:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
										"typeString": "mapping(address => struct NftStaker.Stake)"
									},
									"typeName": {
										"id": 250,
										"keyType": {
											"id": 247,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "419:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "411:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
											"typeString": "mapping(address => struct NftStaker.Stake)"
										},
										"valueType": {
											"id": 249,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 248,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 246,
												"src": "430:5:5"
											},
											"referencedDeclaration": 246,
											"src": "430:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$246_storage_ptr",
												"typeString": "struct NftStaker.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "583d42fd",
									"id": 255,
									"mutability": "mutable",
									"name": "stakingTime",
									"nameLocation": "536:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "501:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 254,
										"keyType": {
											"id": 252,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "509:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "501:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 253,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "574:122:5",
										"statements": [
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 258,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "585:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$121",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307837444434324533363461374263383734623632393034374134393346643735386135373843314164",
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "606:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "597:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$121_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "597:52:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$121",
															"typeString": "contract IERC1155"
														}
													},
													"src": "585:64:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$121",
														"typeString": "contract IERC1155"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "585:64:5"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:2:5"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:0:5"
									},
									"scope": 370,
									"src": "560:136:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "761:173:5",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 272,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "772:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
															}
														},
														"id": 275,
														"indexExpression": {
															"expression": {
																"id": 273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "779:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "779:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "772:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$246_storage",
															"typeString": "struct NftStaker.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 277,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "799:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 278,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "809:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 279,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "818:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "818:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 276,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "793:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$246_storage_ptr_$",
																"typeString": "type(struct NftStaker.Stake storage pointer)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "793:41:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$246_memory_ptr",
															"typeString": "struct NftStaker.Stake memory"
														}
													},
													"src": "772:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$246_storage",
														"typeString": "struct NftStaker.Stake storage ref"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "772:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "873:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "873:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 291,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "893:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																],
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "885:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "885:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "885:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "900:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 294,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "910:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30783030",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "919:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															},
															"value": "0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															}
														],
														"expression": {
															"id": 284,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "846:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$121",
																"typeString": "contract IERC1155"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "846:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "846:80:5"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "713:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "727:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "719:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:35:5"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:5"
									},
									"scope": 370,
									"src": "704:230:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "969:257:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 307,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1015:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																],
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1007:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 305,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1007:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1007:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 309,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1022:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1022:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 311,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1034:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																		"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																	}
																},
																"id": 314,
																"indexExpression": {
																	"expression": {
																		"id": 312,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1041:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1041:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1034:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$246_storage",
																	"typeString": "struct NftStaker.Stake storage ref"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "1034:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 316,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1062:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																		"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																	}
																},
																"id": 319,
																"indexExpression": {
																	"expression": {
																		"id": 317,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1069:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1069:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1062:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$246_storage",
																	"typeString": "struct NftStaker.Stake storage ref"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 243,
															"src": "1062:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30783030",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1089:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															},
															"value": "0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															}
														],
														"expression": {
															"id": 302,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "980:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$121",
																"typeString": "contract IERC1155"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "980:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:116:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "980:116:5"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 324,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1107:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 327,
														"indexExpression": {
															"expression": {
																"id": 325,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1119:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1119:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1107:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 328,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1135:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1135:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 330,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 251,
																			"src": "1153:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																				"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																			}
																		},
																		"id": 333,
																		"indexExpression": {
																			"expression": {
																				"id": 331,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1160:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1160:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1153:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$246_storage",
																			"typeString": "struct NftStaker.Stake storage ref"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 245,
																	"src": "1153:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1135:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 336,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1134:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1107:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "1107:75:5"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1193:25:5",
													"subExpression": {
														"baseExpression": {
															"id": 339,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1200:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
															}
														},
														"id": 342,
														"indexExpression": {
															"expression": {
																"id": 340,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1207:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1207:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1200:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$246_storage",
															"typeString": "struct NftStaker.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "1193:25:5"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "952:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:2:5"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:0:5"
									},
									"scope": 370,
									"src": "943:283:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1426:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e45524331313535526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1461:58:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	},
																	"value": "onERC1155Received(address,address,uint256,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 363,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1451:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1451:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1444:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 361,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1444:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1444:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 360,
												"id": 367,
												"nodeType": "Return",
												"src": "1437:84:5"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1250:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1286:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1278:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1313:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1305:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1336:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1328:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1388:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1373:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1373:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:132:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1418:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 358,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1418:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:8:5"
									},
									"scope": 370,
									"src": "1241:288:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 371,
							"src": "199:1335:5",
							"usedErrors": []
						}
					],
					"src": "33:1501:5"
				},
				"id": 5
			}
		}
	}
}