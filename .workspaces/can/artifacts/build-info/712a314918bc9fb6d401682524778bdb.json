{
	"id": "712a314918bc9fb6d401682524778bdb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.14",
	"solcLongVersion": "0.8.14+commit.80d49f37",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\";\r\n\r\ncontract NftStaker {\r\n    IERC1155 public parentNFT;\r\n\r\n    struct Stake {\r\n        uint256 tokenId;\r\n        uint256 amount;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    // map staker address to stake details\r\n    mapping(address => Stake) public stakes;\r\n\r\n    // map staker to total staking time \r\n    mapping(address => uint256) public stakingTime;    \r\n\r\n    constructor() {\r\n        parentNFT = IERC1155(0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad); // Change it to your NFT contract addr\r\n    }\r\n\r\n    function stake(uint256 _tokenId, uint256 _amount) public {\r\n        stakes[msg.sender] = Stake(_tokenId, _amount, block.timestamp); \r\n        parentNFT.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, \"0x00\");\r\n    } \r\n\r\n    function unstake() public {\r\n        parentNFT.safeTransferFrom(address(this), msg.sender, stakes[msg.sender].tokenId, stakes[msg.sender].amount, \"0x00\");\r\n        stakingTime[msg.sender] += (block.timestamp - stakes[msg.sender].timestamp);\r\n        delete stakes[msg.sender];\r\n    }      \r\n\r\n     function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4) {\r\n        return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"));\r\n    }\r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"NftStaker": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC1155",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":199:1534  contract NftStaker {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":560:696  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"staking.sol\":606:648  0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad */\n  0x7dd42e364a7bc874b629047a493fd758a578c1ad\n    /* \"staking.sol\":585:594  parentNFT */\n  0x00\n  dup1\n    /* \"staking.sol\":585:649  parentNFT = IERC1155(0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"staking.sol\":199:1534  contract NftStaker {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":199:1534  contract NftStaker {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2def6620\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x583d42fd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7b0472f0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":411:450  mapping(address => Stake) public stakes */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":943:1226  function unstake() public {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"staking.sol\":501:547  mapping(address => uint256) public stakingTime */\n    tag_5:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":704:934  function stake(uint256 _tokenId, uint256 _amount) public {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"staking.sol\":225:250  IERC1155 public parentNFT */\n    tag_7:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":1241:1529  function onERC1155Received(... */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":411:450  mapping(address => Stake) public stakes */\n    tag_12:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"staking.sol\":943:1226  function unstake() public {... */\n    tag_16:\n        /* \"staking.sol\":980:989  parentNFT */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":980:1006  parentNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"staking.sol\":1015:1019  this */\n      address\n        /* \"staking.sol\":1022:1032  msg.sender */\n      caller\n        /* \"staking.sol\":1034:1040  stakes */\n      0x01\n        /* \"staking.sol\":1034:1052  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1041:1051  msg.sender */\n      caller\n        /* \"staking.sol\":1034:1052  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1034:1060  stakes[msg.sender].tokenId */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":1062:1068  stakes */\n      0x01\n        /* \"staking.sol\":1062:1080  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1069:1079  msg.sender */\n      caller\n        /* \"staking.sol\":1062:1080  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1062:1087  stakes[msg.sender].amount */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":980:1096  parentNFT.safeTransferFrom(address(this), msg.sender, stakes[msg.sender].tokenId, stakes[msg.sender].amount, \"0x00\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":1153:1159  stakes */\n      0x01\n        /* \"staking.sol\":1153:1171  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1160:1170  msg.sender */\n      caller\n        /* \"staking.sol\":1153:1171  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1153:1181  stakes[msg.sender].timestamp */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":1135:1150  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1135:1181  block.timestamp - stakes[msg.sender].timestamp */\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"staking.sol\":1107:1118  stakingTime */\n      0x02\n        /* \"staking.sol\":1107:1130  stakingTime[msg.sender] */\n      0x00\n        /* \"staking.sol\":1119:1129  msg.sender */\n      caller\n        /* \"staking.sol\":1107:1130  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"staking.sol\":1107:1182  stakingTime[msg.sender] += (block.timestamp - stakes[msg.sender].timestamp) */\n      dup3\n      dup3\n      sload\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1200:1206  stakes */\n      0x01\n        /* \"staking.sol\":1200:1218  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1207:1217  msg.sender */\n      caller\n        /* \"staking.sol\":1200:1218  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"staking.sol\":1193:1218  delete stakes[msg.sender] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":943:1226  function unstake() public {... */\n      jump\t// out\n        /* \"staking.sol\":501:547  mapping(address => uint256) public stakingTime */\n    tag_19:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"staking.sol\":704:934  function stake(uint256 _tokenId, uint256 _amount) public {... */\n    tag_25:\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"staking.sol\":799:807  _tokenId */\n      dup4\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"staking.sol\":809:816  _amount */\n      dup3\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"staking.sol\":818:833  block.timestamp */\n      timestamp\n        /* \"staking.sol\":793:834  Stake(_tokenId, _amount, block.timestamp) */\n      dup2\n      mstore\n      pop\n        /* \"staking.sol\":772:778  stakes */\n      0x01\n        /* \"staking.sol\":772:790  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":779:789  msg.sender */\n      caller\n        /* \"staking.sol\":772:790  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":772:834  stakes[msg.sender] = Stake(_tokenId, _amount, block.timestamp) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"staking.sol\":846:855  parentNFT */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":846:872  parentNFT.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"staking.sol\":873:883  msg.sender */\n      caller\n        /* \"staking.sol\":893:897  this */\n      address\n        /* \"staking.sol\":900:908  _tokenId */\n      dup6\n        /* \"staking.sol\":910:917  _amount */\n      dup6\n        /* \"staking.sol\":846:926  parentNFT.safeTransferFrom(msg.sender, address(this), _tokenId, _amount, \"0x00\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_47:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_50\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_50:\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":704:934  function stake(uint256 _tokenId, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":225:250  IERC1155 public parentNFT */\n    tag_27:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"staking.sol\":1241:1529  function onERC1155Received(... */\n    tag_33:\n        /* \"staking.sol\":1418:1424  bytes4 */\n      0x00\n        /* \"staking.sol\":1451:1520  keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\") */\n      0xf23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97\n        /* \"staking.sol\":1437:1521  return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\")) */\n      swap1\n      pop\n        /* \"staking.sol\":1241:1529  function onERC1155Received(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_53:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_54:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_55:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_56:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_85\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_55\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_57:\n        /* \"#utility.yul\":641:665   */\n      tag_87\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_56\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_88\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_88:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_58:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_90\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_57\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_11:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_93\n      tag_53\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":917:1036   */\n    tag_92:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_94\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_58\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_59:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_60:\n        /* \"#utility.yul\":1346:1370   */\n      tag_97\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_59\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1825   */\n    tag_14:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x60\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_99\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup7\n        /* \"#utility.yul\":1583:1654   */\n      tag_60\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1664:1736   */\n      tag_100\n        /* \"#utility.yul\":1732:1734   */\n      0x20\n        /* \"#utility.yul\":1721:1730   */\n      dup4\n        /* \"#utility.yul\":1717:1735   */\n      add\n        /* \"#utility.yul\":1708:1714   */\n      dup6\n        /* \"#utility.yul\":1664:1736   */\n      tag_60\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1746:1818   */\n      tag_101\n        /* \"#utility.yul\":1814:1816   */\n      0x40\n        /* \"#utility.yul\":1803:1812   */\n      dup4\n        /* \"#utility.yul\":1799:1817   */\n      add\n        /* \"#utility.yul\":1790:1796   */\n      dup5\n        /* \"#utility.yul\":1746:1818   */\n      tag_60\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1383:1825   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:2053   */\n    tag_21:\n        /* \"#utility.yul\":1924:1928   */\n      0x00\n        /* \"#utility.yul\":1962:1964   */\n      0x20\n        /* \"#utility.yul\":1951:1960   */\n      dup3\n        /* \"#utility.yul\":1947:1965   */\n      add\n        /* \"#utility.yul\":1939:1965   */\n      swap1\n      pop\n        /* \"#utility.yul\":1975:2046   */\n      tag_103\n        /* \"#utility.yul\":2043:2044   */\n      0x00\n        /* \"#utility.yul\":2032:2041   */\n      dup4\n        /* \"#utility.yul\":2028:2045   */\n      add\n        /* \"#utility.yul\":2019:2025   */\n      dup5\n        /* \"#utility.yul\":1975:2046   */\n      tag_60\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1831:2053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2181   */\n    tag_61:\n        /* \"#utility.yul\":2132:2156   */\n      tag_105\n        /* \"#utility.yul\":2150:2155   */\n      dup2\n        /* \"#utility.yul\":2132:2156   */\n      tag_59\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":2125:2130   */\n      dup2\n        /* \"#utility.yul\":2122:2157   */\n      eq\n        /* \"#utility.yul\":2112:2175   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":2171:2172   */\n      0x00\n        /* \"#utility.yul\":2168:2169   */\n      dup1\n        /* \"#utility.yul\":2161:2173   */\n      revert\n        /* \"#utility.yul\":2112:2175   */\n    tag_106:\n        /* \"#utility.yul\":2059:2181   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2326   */\n    tag_62:\n        /* \"#utility.yul\":2233:2238   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup2\n        /* \"#utility.yul\":2258:2278   */\n      calldataload\n        /* \"#utility.yul\":2249:2278   */\n      swap1\n      pop\n        /* \"#utility.yul\":2287:2320   */\n      tag_108\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2287:2320   */\n      tag_61\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2187:2326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2806   */\n    tag_24:\n        /* \"#utility.yul\":2400:2406   */\n      0x00\n        /* \"#utility.yul\":2408:2414   */\n      dup1\n        /* \"#utility.yul\":2457:2459   */\n      0x40\n        /* \"#utility.yul\":2445:2454   */\n      dup4\n        /* \"#utility.yul\":2436:2443   */\n      dup6\n        /* \"#utility.yul\":2432:2455   */\n      sub\n        /* \"#utility.yul\":2428:2460   */\n      slt\n        /* \"#utility.yul\":2425:2544   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":2463:2542   */\n      tag_111\n      tag_53\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2425:2544   */\n    tag_110:\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2608:2661   */\n      tag_112\n        /* \"#utility.yul\":2653:2660   */\n      dup6\n        /* \"#utility.yul\":2644:2650   */\n      dup3\n        /* \"#utility.yul\":2633:2642   */\n      dup7\n        /* \"#utility.yul\":2629:2651   */\n      add\n        /* \"#utility.yul\":2608:2661   */\n      tag_62\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2598:2661   */\n      swap3\n      pop\n        /* \"#utility.yul\":2554:2671   */\n      pop\n        /* \"#utility.yul\":2710:2712   */\n      0x20\n        /* \"#utility.yul\":2736:2789   */\n      tag_113\n        /* \"#utility.yul\":2781:2788   */\n      dup6\n        /* \"#utility.yul\":2772:2778   */\n      dup3\n        /* \"#utility.yul\":2761:2770   */\n      dup7\n        /* \"#utility.yul\":2757:2779   */\n      add\n        /* \"#utility.yul\":2736:2789   */\n      tag_62\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":2726:2789   */\n      swap2\n      pop\n        /* \"#utility.yul\":2681:2799   */\n      pop\n        /* \"#utility.yul\":2332:2806   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2812:2872   */\n    tag_63:\n        /* \"#utility.yul\":2840:2843   */\n      0x00\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2854:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2812:2872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:3020   */\n    tag_64:\n        /* \"#utility.yul\":2928:2937   */\n      0x00\n        /* \"#utility.yul\":2961:3014   */\n      tag_116\n        /* \"#utility.yul\":2979:3013   */\n      tag_117\n        /* \"#utility.yul\":2988:3012   */\n      tag_118\n        /* \"#utility.yul\":3006:3011   */\n      dup5\n        /* \"#utility.yul\":2988:3012   */\n      tag_55\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":2979:3013   */\n      tag_63\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":2961:3014   */\n      tag_55\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2948:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":2878:3020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3026:3152   */\n    tag_65:\n        /* \"#utility.yul\":3076:3085   */\n      0x00\n        /* \"#utility.yul\":3109:3146   */\n      tag_120\n        /* \"#utility.yul\":3140:3145   */\n      dup3\n        /* \"#utility.yul\":3109:3146   */\n      tag_64\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3096:3146   */\n      swap1\n      pop\n        /* \"#utility.yul\":3026:3152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3158:3300   */\n    tag_66:\n        /* \"#utility.yul\":3224:3233   */\n      0x00\n        /* \"#utility.yul\":3257:3294   */\n      tag_122\n        /* \"#utility.yul\":3288:3293   */\n      dup3\n        /* \"#utility.yul\":3257:3294   */\n      tag_65\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3244:3294   */\n      swap1\n      pop\n        /* \"#utility.yul\":3158:3300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3306:3469   */\n    tag_67:\n        /* \"#utility.yul\":3409:3462   */\n      tag_124\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3409:3462   */\n      tag_66\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":3404:3407   */\n      dup3\n        /* \"#utility.yul\":3397:3463   */\n      mstore\n        /* \"#utility.yul\":3306:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3729   */\n    tag_29:\n        /* \"#utility.yul\":3584:3588   */\n      0x00\n        /* \"#utility.yul\":3622:3624   */\n      0x20\n        /* \"#utility.yul\":3611:3620   */\n      dup3\n        /* \"#utility.yul\":3607:3625   */\n      add\n        /* \"#utility.yul\":3599:3625   */\n      swap1\n      pop\n        /* \"#utility.yul\":3635:3722   */\n      tag_126\n        /* \"#utility.yul\":3719:3720   */\n      0x00\n        /* \"#utility.yul\":3708:3717   */\n      dup4\n        /* \"#utility.yul\":3704:3721   */\n      add\n        /* \"#utility.yul\":3695:3701   */\n      dup5\n        /* \"#utility.yul\":3635:3722   */\n      tag_67\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3475:3729   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3735:3852   */\n    tag_68:\n        /* \"#utility.yul\":3844:3845   */\n      0x00\n        /* \"#utility.yul\":3841:3842   */\n      dup1\n        /* \"#utility.yul\":3834:3846   */\n      revert\n        /* \"#utility.yul\":3858:3975   */\n    tag_69:\n        /* \"#utility.yul\":3967:3968   */\n      0x00\n        /* \"#utility.yul\":3964:3965   */\n      dup1\n        /* \"#utility.yul\":3957:3969   */\n      revert\n        /* \"#utility.yul\":3981:4098   */\n    tag_70:\n        /* \"#utility.yul\":4090:4091   */\n      0x00\n        /* \"#utility.yul\":4087:4088   */\n      dup1\n        /* \"#utility.yul\":4080:4092   */\n      revert\n        /* \"#utility.yul\":4117:4669   */\n    tag_71:\n        /* \"#utility.yul\":4174:4182   */\n      0x00\n        /* \"#utility.yul\":4184:4190   */\n      dup1\n        /* \"#utility.yul\":4234:4237   */\n      dup4\n        /* \"#utility.yul\":4227:4231   */\n      0x1f\n        /* \"#utility.yul\":4219:4225   */\n      dup5\n        /* \"#utility.yul\":4215:4232   */\n      add\n        /* \"#utility.yul\":4211:4238   */\n      slt\n        /* \"#utility.yul\":4201:4323   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":4242:4321   */\n      tag_132\n      tag_68\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4201:4323   */\n    tag_131:\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4342:4362   */\n      calldataload\n        /* \"#utility.yul\":4332:4362   */\n      swap1\n      pop\n        /* \"#utility.yul\":4385:4403   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4377:4383   */\n      dup2\n        /* \"#utility.yul\":4374:4404   */\n      gt\n        /* \"#utility.yul\":4371:4488   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":4407:4486   */\n      tag_134\n      tag_69\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4371:4488   */\n    tag_133:\n        /* \"#utility.yul\":4521:4525   */\n      0x20\n        /* \"#utility.yul\":4513:4519   */\n      dup4\n        /* \"#utility.yul\":4509:4526   */\n      add\n        /* \"#utility.yul\":4497:4526   */\n      swap2\n      pop\n        /* \"#utility.yul\":4575:4578   */\n      dup4\n        /* \"#utility.yul\":4567:4571   */\n      0x01\n        /* \"#utility.yul\":4559:4565   */\n      dup3\n        /* \"#utility.yul\":4555:4572   */\n      mul\n        /* \"#utility.yul\":4545:4553   */\n      dup4\n        /* \"#utility.yul\":4541:4573   */\n      add\n        /* \"#utility.yul\":4538:4579   */\n      gt\n        /* \"#utility.yul\":4535:4663   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":4582:4661   */\n      tag_136\n      tag_70\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4535:4663   */\n    tag_135:\n        /* \"#utility.yul\":4117:4669   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4675:5784   */\n    tag_32:\n        /* \"#utility.yul\":4781:4787   */\n      0x00\n        /* \"#utility.yul\":4789:4795   */\n      dup1\n        /* \"#utility.yul\":4797:4803   */\n      0x00\n        /* \"#utility.yul\":4805:4811   */\n      dup1\n        /* \"#utility.yul\":4813:4819   */\n      0x00\n        /* \"#utility.yul\":4821:4827   */\n      dup1\n        /* \"#utility.yul\":4870:4873   */\n      0xa0\n        /* \"#utility.yul\":4858:4867   */\n      dup8\n        /* \"#utility.yul\":4849:4856   */\n      dup10\n        /* \"#utility.yul\":4845:4868   */\n      sub\n        /* \"#utility.yul\":4841:4874   */\n      slt\n        /* \"#utility.yul\":4838:4958   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":4877:4956   */\n      tag_139\n      tag_53\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":4838:4958   */\n    tag_138:\n        /* \"#utility.yul\":4997:4998   */\n      0x00\n        /* \"#utility.yul\":5022:5075   */\n      tag_140\n        /* \"#utility.yul\":5067:5074   */\n      dup10\n        /* \"#utility.yul\":5058:5064   */\n      dup3\n        /* \"#utility.yul\":5047:5056   */\n      dup11\n        /* \"#utility.yul\":5043:5065   */\n      add\n        /* \"#utility.yul\":5022:5075   */\n      tag_58\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5012:5075   */\n      swap7\n      pop\n        /* \"#utility.yul\":4968:5085   */\n      pop\n        /* \"#utility.yul\":5124:5126   */\n      0x20\n        /* \"#utility.yul\":5150:5203   */\n      tag_141\n        /* \"#utility.yul\":5195:5202   */\n      dup10\n        /* \"#utility.yul\":5186:5192   */\n      dup3\n        /* \"#utility.yul\":5175:5184   */\n      dup11\n        /* \"#utility.yul\":5171:5193   */\n      add\n        /* \"#utility.yul\":5150:5203   */\n      tag_58\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5140:5203   */\n      swap6\n      pop\n        /* \"#utility.yul\":5095:5213   */\n      pop\n        /* \"#utility.yul\":5252:5254   */\n      0x40\n        /* \"#utility.yul\":5278:5331   */\n      tag_142\n        /* \"#utility.yul\":5323:5330   */\n      dup10\n        /* \"#utility.yul\":5314:5320   */\n      dup3\n        /* \"#utility.yul\":5303:5312   */\n      dup11\n        /* \"#utility.yul\":5299:5321   */\n      add\n        /* \"#utility.yul\":5278:5331   */\n      tag_62\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5268:5331   */\n      swap5\n      pop\n        /* \"#utility.yul\":5223:5341   */\n      pop\n        /* \"#utility.yul\":5380:5382   */\n      0x60\n        /* \"#utility.yul\":5406:5459   */\n      tag_143\n        /* \"#utility.yul\":5451:5458   */\n      dup10\n        /* \"#utility.yul\":5442:5448   */\n      dup3\n        /* \"#utility.yul\":5431:5440   */\n      dup11\n        /* \"#utility.yul\":5427:5449   */\n      add\n        /* \"#utility.yul\":5406:5459   */\n      tag_62\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":5396:5459   */\n      swap4\n      pop\n        /* \"#utility.yul\":5351:5469   */\n      pop\n        /* \"#utility.yul\":5536:5539   */\n      0x80\n        /* \"#utility.yul\":5525:5534   */\n      dup8\n        /* \"#utility.yul\":5521:5540   */\n      add\n        /* \"#utility.yul\":5508:5541   */\n      calldataload\n        /* \"#utility.yul\":5568:5586   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5560:5566   */\n      dup2\n        /* \"#utility.yul\":5557:5587   */\n      gt\n        /* \"#utility.yul\":5554:5671   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":5590:5669   */\n      tag_145\n      tag_54\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":5554:5671   */\n    tag_144:\n        /* \"#utility.yul\":5703:5767   */\n      tag_146\n        /* \"#utility.yul\":5759:5766   */\n      dup10\n        /* \"#utility.yul\":5750:5756   */\n      dup3\n        /* \"#utility.yul\":5739:5748   */\n      dup11\n        /* \"#utility.yul\":5735:5757   */\n      add\n        /* \"#utility.yul\":5703:5767   */\n      tag_71\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5685:5767   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5479:5777   */\n      pop\n        /* \"#utility.yul\":4675:5784   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":5790:5939   */\n    tag_72:\n        /* \"#utility.yul\":5826:5833   */\n      0x00\n        /* \"#utility.yul\":5866:5932   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5859:5864   */\n      dup3\n        /* \"#utility.yul\":5855:5933   */\n      and\n        /* \"#utility.yul\":5844:5933   */\n      swap1\n      pop\n        /* \"#utility.yul\":5790:5939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5945:6060   */\n    tag_73:\n        /* \"#utility.yul\":6030:6053   */\n      tag_149\n        /* \"#utility.yul\":6047:6052   */\n      dup2\n        /* \"#utility.yul\":6030:6053   */\n      tag_72\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6025:6028   */\n      dup3\n        /* \"#utility.yul\":6018:6054   */\n      mstore\n        /* \"#utility.yul\":5945:6060   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6066:6284   */\n    tag_35:\n        /* \"#utility.yul\":6157:6161   */\n      0x00\n        /* \"#utility.yul\":6195:6197   */\n      0x20\n        /* \"#utility.yul\":6184:6193   */\n      dup3\n        /* \"#utility.yul\":6180:6198   */\n      add\n        /* \"#utility.yul\":6172:6198   */\n      swap1\n      pop\n        /* \"#utility.yul\":6208:6277   */\n      tag_151\n        /* \"#utility.yul\":6274:6275   */\n      0x00\n        /* \"#utility.yul\":6263:6272   */\n      dup4\n        /* \"#utility.yul\":6259:6276   */\n      add\n        /* \"#utility.yul\":6250:6256   */\n      dup5\n        /* \"#utility.yul\":6208:6277   */\n      tag_73\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6066:6284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6290:6408   */\n    tag_74:\n        /* \"#utility.yul\":6377:6401   */\n      tag_153\n        /* \"#utility.yul\":6395:6400   */\n      dup2\n        /* \"#utility.yul\":6377:6401   */\n      tag_56\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6372:6375   */\n      dup3\n        /* \"#utility.yul\":6365:6402   */\n      mstore\n        /* \"#utility.yul\":6290:6408   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6414:6582   */\n    tag_75:\n        /* \"#utility.yul\":6497:6508   */\n      0x00\n        /* \"#utility.yul\":6531:6537   */\n      dup3\n        /* \"#utility.yul\":6526:6529   */\n      dup3\n        /* \"#utility.yul\":6519:6538   */\n      mstore\n        /* \"#utility.yul\":6571:6575   */\n      0x20\n        /* \"#utility.yul\":6566:6569   */\n      dup3\n        /* \"#utility.yul\":6562:6576   */\n      add\n        /* \"#utility.yul\":6547:6576   */\n      swap1\n      pop\n        /* \"#utility.yul\":6414:6582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6588:6742   */\n    tag_76:\n        /* \"#utility.yul\":6728:6734   */\n      0x3078303000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6724:6725   */\n      0x00\n        /* \"#utility.yul\":6716:6722   */\n      dup3\n        /* \"#utility.yul\":6712:6726   */\n      add\n        /* \"#utility.yul\":6705:6735   */\n      mstore\n        /* \"#utility.yul\":6588:6742   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6748:7111   */\n    tag_77:\n        /* \"#utility.yul\":6889:6892   */\n      0x00\n        /* \"#utility.yul\":6910:6975   */\n      tag_157\n        /* \"#utility.yul\":6973:6974   */\n      0x04\n        /* \"#utility.yul\":6968:6971   */\n      dup4\n        /* \"#utility.yul\":6910:6975   */\n      tag_75\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":6903:6975   */\n      swap2\n      pop\n        /* \"#utility.yul\":6984:7077   */\n      tag_158\n        /* \"#utility.yul\":7073:7076   */\n      dup3\n        /* \"#utility.yul\":6984:7077   */\n      tag_76\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7102:7104   */\n      0x20\n        /* \"#utility.yul\":7097:7100   */\n      dup3\n        /* \"#utility.yul\":7093:7105   */\n      add\n        /* \"#utility.yul\":7086:7105   */\n      swap1\n      pop\n        /* \"#utility.yul\":6748:7111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7117:7976   */\n    tag_38:\n        /* \"#utility.yul\":7394:7398   */\n      0x00\n        /* \"#utility.yul\":7432:7435   */\n      0xa0\n        /* \"#utility.yul\":7421:7430   */\n      dup3\n        /* \"#utility.yul\":7417:7436   */\n      add\n        /* \"#utility.yul\":7409:7436   */\n      swap1\n      pop\n        /* \"#utility.yul\":7446:7517   */\n      tag_160\n        /* \"#utility.yul\":7514:7515   */\n      0x00\n        /* \"#utility.yul\":7503:7512   */\n      dup4\n        /* \"#utility.yul\":7499:7516   */\n      add\n        /* \"#utility.yul\":7490:7496   */\n      dup8\n        /* \"#utility.yul\":7446:7517   */\n      tag_74\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7527:7599   */\n      tag_161\n        /* \"#utility.yul\":7595:7597   */\n      0x20\n        /* \"#utility.yul\":7584:7593   */\n      dup4\n        /* \"#utility.yul\":7580:7598   */\n      add\n        /* \"#utility.yul\":7571:7577   */\n      dup7\n        /* \"#utility.yul\":7527:7599   */\n      tag_74\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7609:7681   */\n      tag_162\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7666:7675   */\n      dup4\n        /* \"#utility.yul\":7662:7680   */\n      add\n        /* \"#utility.yul\":7653:7659   */\n      dup6\n        /* \"#utility.yul\":7609:7681   */\n      tag_60\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":7691:7763   */\n      tag_163\n        /* \"#utility.yul\":7759:7761   */\n      0x60\n        /* \"#utility.yul\":7748:7757   */\n      dup4\n        /* \"#utility.yul\":7744:7762   */\n      add\n        /* \"#utility.yul\":7735:7741   */\n      dup5\n        /* \"#utility.yul\":7691:7763   */\n      tag_60\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7811:7820   */\n      dup2\n        /* \"#utility.yul\":7805:7809   */\n      dup2\n        /* \"#utility.yul\":7801:7821   */\n      sub\n        /* \"#utility.yul\":7795:7798   */\n      0x80\n        /* \"#utility.yul\":7784:7793   */\n      dup4\n        /* \"#utility.yul\":7780:7799   */\n      add\n        /* \"#utility.yul\":7773:7822   */\n      mstore\n        /* \"#utility.yul\":7839:7969   */\n      tag_164\n        /* \"#utility.yul\":7964:7968   */\n      dup2\n        /* \"#utility.yul\":7839:7969   */\n      tag_77\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7831:7969   */\n      swap1\n      pop\n        /* \"#utility.yul\":7117:7976   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7982:8162   */\n    tag_78:\n        /* \"#utility.yul\":8030:8107   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8027:8028   */\n      0x00\n        /* \"#utility.yul\":8020:8108   */\n      mstore\n        /* \"#utility.yul\":8127:8131   */\n      0x11\n        /* \"#utility.yul\":8124:8125   */\n      0x04\n        /* \"#utility.yul\":8117:8132   */\n      mstore\n        /* \"#utility.yul\":8151:8155   */\n      0x24\n        /* \"#utility.yul\":8148:8149   */\n      0x00\n        /* \"#utility.yul\":8141:8156   */\n      revert\n        /* \"#utility.yul\":8168:8359   */\n    tag_43:\n        /* \"#utility.yul\":8208:8212   */\n      0x00\n        /* \"#utility.yul\":8228:8248   */\n      tag_167\n        /* \"#utility.yul\":8246:8247   */\n      dup3\n        /* \"#utility.yul\":8228:8248   */\n      tag_59\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":8223:8248   */\n      swap2\n      pop\n        /* \"#utility.yul\":8262:8282   */\n      tag_168\n        /* \"#utility.yul\":8280:8281   */\n      dup4\n        /* \"#utility.yul\":8262:8282   */\n      tag_59\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8257:8282   */\n      swap3\n      pop\n        /* \"#utility.yul\":8301:8302   */\n      dup3\n        /* \"#utility.yul\":8298:8299   */\n      dup3\n        /* \"#utility.yul\":8295:8303   */\n      lt\n        /* \"#utility.yul\":8292:8326   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":8306:8324   */\n      tag_170\n      tag_78\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":8292:8326   */\n    tag_169:\n        /* \"#utility.yul\":8351:8352   */\n      dup3\n        /* \"#utility.yul\":8348:8349   */\n      dup3\n        /* \"#utility.yul\":8344:8353   */\n      sub\n        /* \"#utility.yul\":8336:8353   */\n      swap1\n      pop\n        /* \"#utility.yul\":8168:8359   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8365:8670   */\n    tag_45:\n        /* \"#utility.yul\":8405:8408   */\n      0x00\n        /* \"#utility.yul\":8424:8444   */\n      tag_172\n        /* \"#utility.yul\":8442:8443   */\n      dup3\n        /* \"#utility.yul\":8424:8444   */\n      tag_59\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":8419:8444   */\n      swap2\n      pop\n        /* \"#utility.yul\":8458:8478   */\n      tag_173\n        /* \"#utility.yul\":8476:8477   */\n      dup4\n        /* \"#utility.yul\":8458:8478   */\n      tag_59\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":8453:8478   */\n      swap3\n      pop\n        /* \"#utility.yul\":8612:8613   */\n      dup3\n        /* \"#utility.yul\":8544:8610   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8540:8614   */\n      sub\n        /* \"#utility.yul\":8537:8538   */\n      dup3\n        /* \"#utility.yul\":8534:8615   */\n      gt\n        /* \"#utility.yul\":8531:8638   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":8618:8636   */\n      tag_175\n      tag_78\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":8531:8638   */\n    tag_174:\n        /* \"#utility.yul\":8662:8663   */\n      dup3\n        /* \"#utility.yul\":8659:8660   */\n      dup3\n        /* \"#utility.yul\":8655:8664   */\n      add\n        /* \"#utility.yul\":8648:8664   */\n      swap1\n      pop\n        /* \"#utility.yul\":8365:8670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e76ef1d2d322b03ff03a2e4d638d551f0038009d5ef7c4d4eed95ada809e88f464736f6c634300080e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50737dd42e364a7bc874b629047a493fd758a578c1ad6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109e4806100746000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806316934fc4146100675780632def662014610099578063583d42fd146100a35780637b0472f0146100d3578063b8e33fb2146100ef578063f23a6e611461010d575b600080fd5b610081600480360381019061007c919061055e565b61013d565b604051610090939291906105a4565b60405180910390f35b6100a1610167565b005b6100bd60048036038101906100b8919061055e565b61037b565b6040516100ca91906105db565b60405180910390f35b6100ed60048036038101906100e89190610622565b610393565b005b6100f76104a3565b60405161010491906106c1565b60405180910390f35b61012760048036038101906101229190610741565b6104c7565b6040516101349190610816565b60405180910390f35b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b815260040161024a949392919061089d565b600060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b50505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426102ca9190610924565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103189190610958565b92505081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090555050565b60026020528060005260406000206000915090505481565b604051806060016040528083815260200182815260200142815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b815260040161046d949392919061089d565b600060405180830381600087803b15801561048757600080fd5b505af115801561049b573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061052b82610500565b9050919050565b61053b81610520565b811461054657600080fd5b50565b60008135905061055881610532565b92915050565b600060208284031215610574576105736104f6565b5b600061058284828501610549565b91505092915050565b6000819050919050565b61059e8161058b565b82525050565b60006060820190506105b96000830186610595565b6105c66020830185610595565b6105d36040830184610595565b949350505050565b60006020820190506105f06000830184610595565b92915050565b6105ff8161058b565b811461060a57600080fd5b50565b60008135905061061c816105f6565b92915050565b60008060408385031215610639576106386104f6565b5b60006106478582860161060d565b92505060206106588582860161060d565b9150509250929050565b6000819050919050565b600061068761068261067d84610500565b610662565b610500565b9050919050565b60006106998261066c565b9050919050565b60006106ab8261068e565b9050919050565b6106bb816106a0565b82525050565b60006020820190506106d660008301846106b2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610701576107006106dc565b5b8235905067ffffffffffffffff81111561071e5761071d6106e1565b5b60208301915083600182028301111561073a576107396106e6565b5b9250929050565b60008060008060008060a0878903121561075e5761075d6104f6565b5b600061076c89828a01610549565b965050602061077d89828a01610549565b955050604061078e89828a0161060d565b945050606061079f89828a0161060d565b935050608087013567ffffffffffffffff8111156107c0576107bf6104fb565b5b6107cc89828a016106eb565b92509250509295509295509295565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610810816107db565b82525050565b600060208201905061082b6000830184610807565b92915050565b61083a81610520565b82525050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b6000610887600483610840565b915061089282610851565b602082019050919050565b600060a0820190506108b26000830187610831565b6108bf6020830186610831565b6108cc6040830185610595565b6108d96060830184610595565b81810360808301526108ea8161087a565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061092f8261058b565b915061093a8361058b565b92508282101561094d5761094c6108f5565b5b828203905092915050565b60006109638261058b565b915061096e8361058b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109a3576109a26108f5565b5b82820190509291505056fea2646970667358221220e76ef1d2d322b03ff03a2e4d638d551f0038009d5ef7c4d4eed95ada809e88f464736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH20 0x7DD42E364A7BC874B629047A493FD758A578C1AD PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x9E4 DUP1 PUSH2 0x74 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP3 PUSH2 0x500 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B DUP2 PUSH2 0x520 JUMP JUMPDEST DUP2 EQ PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x558 DUP2 PUSH2 0x532 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x574 JUMPI PUSH2 0x573 PUSH2 0x4F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP5 DUP3 DUP6 ADD PUSH2 0x549 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59E DUP2 PUSH2 0x58B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5B9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x595 JUMP JUMPDEST PUSH2 0x5C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH2 0x5D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FF DUP2 PUSH2 0x58B JUMP JUMPDEST DUP2 EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61C DUP2 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x4F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x647 DUP6 DUP3 DUP7 ADD PUSH2 0x60D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x658 DUP6 DUP3 DUP7 ADD PUSH2 0x60D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x687 PUSH2 0x682 PUSH2 0x67D DUP5 PUSH2 0x500 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x699 DUP3 PUSH2 0x66C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB DUP3 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BB DUP2 PUSH2 0x6A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x701 JUMPI PUSH2 0x700 PUSH2 0x6DC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71E JUMPI PUSH2 0x71D PUSH2 0x6E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x73A JUMPI PUSH2 0x739 PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x75E JUMPI PUSH2 0x75D PUSH2 0x4F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76C DUP10 DUP3 DUP11 ADD PUSH2 0x549 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x77D DUP10 DUP3 DUP11 ADD PUSH2 0x549 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x78E DUP10 DUP3 DUP11 ADD PUSH2 0x60D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x79F DUP10 DUP3 DUP11 ADD PUSH2 0x60D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x4FB JUMP JUMPDEST JUMPDEST PUSH2 0x7CC DUP10 DUP3 DUP11 ADD PUSH2 0x6EB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x7DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x807 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x887 PUSH1 0x4 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x892 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x8B2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x8BF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x8CC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH2 0x8D9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x595 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x8EA DUP2 PUSH2 0x87A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x92F DUP3 PUSH2 0x58B JUMP JUMPDEST SWAP2 POP PUSH2 0x93A DUP4 PUSH2 0x58B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x94D JUMPI PUSH2 0x94C PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x963 DUP3 PUSH2 0x58B JUMP JUMPDEST SWAP2 POP PUSH2 0x96E DUP4 PUSH2 0x58B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A2 PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 PUSH15 0xF1D2D322B03FF03A2E4D638D551F00 CODESIZE STOP SWAP14 0x5E 0xF7 0xC4 0xD4 0xEE 0xD9 GAS 0xDA DUP1 SWAP15 DUP9 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "199:1335:5:-:0;;;560:136;;;;;;;;;;606:42;585:9;;:64;;;;;;;;;;;;;;;;;;199:1335;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155Received_369": {
									"entryPoint": 1223,
									"id": 369,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@parentNFT_239": {
									"entryPoint": 1187,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_299": {
									"entryPoint": 915,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakes_251": {
									"entryPoint": 317,
									"id": 251,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTime_255": {
									"entryPoint": 891,
									"id": 255,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_346": {
									"entryPoint": 359,
									"id": 346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack": {
									"entryPoint": 1714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC1155_$121__to_t_address__fromStack_reversed": {
									"entryPoint": 1729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC1155_$121_to_t_address": {
									"entryPoint": 1696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1766,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4": {
									"entryPoint": 2129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8673:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:6"
															},
															"nodeType": "YulIf",
															"src": "621:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:6",
														"type": ""
													}
												],
												"src": "568:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:6",
														"type": ""
													}
												],
												"src": "696:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:6"
															},
															"nodeType": "YulIf",
															"src": "917:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:6",
														"type": ""
													}
												],
												"src": "841:329:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:6",
														"type": ""
													}
												],
												"src": "1176:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:6",
														"type": ""
													}
												],
												"src": "1259:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1537:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1547:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1721:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1732:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1717:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1664:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1664:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1814:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1799:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1799:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1746:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1746:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1493:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1505:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1513:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1521:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1532:4:6",
														"type": ""
													}
												],
												"src": "1383:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1939:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1951:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1962:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1939:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2019:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2032:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2043:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2028:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2028:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1975:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1975:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1901:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1913:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1924:4:6",
														"type": ""
													}
												],
												"src": "1831:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2102:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2159:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2171:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2161:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2161:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2161:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2125:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2150:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2132:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2132:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2122:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:43:6"
															},
															"nodeType": "YulIf",
															"src": "2112:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2095:5:6",
														"type": ""
													}
												],
												"src": "2059:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2239:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2249:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2271:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2258:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2258:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2249:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2314:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2287:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2287:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2287:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2217:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2225:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2233:5:6",
														"type": ""
													}
												],
												"src": "2187:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2415:391:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2461:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2463:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2463:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2463:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2436:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2445:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2432:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2432:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:32:6"
															},
															"nodeType": "YulIf",
															"src": "2425:119:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2554:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2569:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2583:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2573:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2598:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2633:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2644:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2629:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2629:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2653:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2608:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2598:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2681:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2696:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2700:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2726:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2761:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2772:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2757:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2757:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2781:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2736:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2736:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2726:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2377:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2388:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2400:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2408:6:6",
														"type": ""
													}
												],
												"src": "2332:474:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2844:28:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2854:12:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2861:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2830:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2840:3:6",
														"type": ""
													}
												],
												"src": "2812:60:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2938:82:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2948:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3006:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2988:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2988:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2979:8:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2979:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2961:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2961:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2948:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2918:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2928:9:6",
														"type": ""
													}
												],
												"src": "2878:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3086:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3096:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3140:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3109:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3096:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3066:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3076:9:6",
														"type": ""
													}
												],
												"src": "3026:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3234:66:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3244:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3288:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3257:30:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3257:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3244:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC1155_$121_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3214:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3224:9:6",
														"type": ""
													}
												],
												"src": "3158:142:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3387:82:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3404:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC1155_$121_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3409:46:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3409:53:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3397:66:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3375:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3382:3:6",
														"type": ""
													}
												],
												"src": "3306:163:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3589:140:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3599:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3611:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3622:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3607:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3607:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3599:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3695:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3708:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3719:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3704:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3704:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3635:59:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3635:87:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3635:87:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC1155_$121__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3561:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3573:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3584:4:6",
														"type": ""
													}
												],
												"src": "3475:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3824:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3841:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3844:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3834:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3834:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3834:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "3735:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3947:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3964:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3967:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3957:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3957:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3957:12:6"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "3858:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4070:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4080:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4080:12:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4080:12:6"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3981:117:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4191:478:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4240:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4242:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4242:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4219:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4227:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4215:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4215:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4234:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4211:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:35:6"
															},
															"nodeType": "YulIf",
															"src": "4201:122:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4332:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4355:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4342:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4342:20:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4332:6:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4405:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "4407:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4407:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4407:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4377:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4385:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4374:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4374:30:6"
															},
															"nodeType": "YulIf",
															"src": "4371:117:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4497:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4513:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4521:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4509:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4509:17:6"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4497:8:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4580:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4582:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4582:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4582:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "4545:8:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "4559:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4567:4:6",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4555:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4555:17:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4541:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4541:32:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4575:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4538:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:41:6"
															},
															"nodeType": "YulIf",
															"src": "4535:128:6"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4158:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4166:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "4174:8:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4184:6:6",
														"type": ""
													}
												],
												"src": "4117:552:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4828:956:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4875:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4877:77:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4877:79:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4877:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4849:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4858:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4870:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:33:6"
															},
															"nodeType": "YulIf",
															"src": "4838:120:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "4968:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4983:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4997:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4987:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5012:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5047:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5058:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5043:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5043:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5067:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5022:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5022:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5012:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5095:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5110:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5124:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5114:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5140:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5175:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5186:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5171:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5171:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5195:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5150:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5150:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5140:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5223:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5238:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5252:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5242:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5268:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5303:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5314:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5299:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5299:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5323:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5278:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5278:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5268:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5351:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5366:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5380:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5370:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5396:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5431:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5442:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5427:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5427:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5451:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5406:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5406:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "5396:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5479:298:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5494:47:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5525:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5536:3:6",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5521:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5521:19:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5508:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5508:33:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5498:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5588:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5590:77:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5590:79:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5590:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5560:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5568:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5557:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5557:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "5554:117:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5685:82:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5739:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5750:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5735:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5735:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5759:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5703:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5703:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "5685:6:6"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "5693:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4758:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4769:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4781:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4789:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4797:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4813:6:6",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4821:6:6",
														"type": ""
													}
												],
												"src": "4675:1109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5834:105:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5844:89:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5859:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5866:66:6",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5855:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:78:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5844:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5816:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5826:7:6",
														"type": ""
													}
												],
												"src": "5790:149:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6008:52:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6025:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6047:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "6030:16:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6030:23:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6018:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6018:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6018:36:6"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5996:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6003:3:6",
														"type": ""
													}
												],
												"src": "5945:115:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6162:122:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6172:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6184:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6195:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6180:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6180:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6172:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6250:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6263:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6274:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6259:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6259:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6208:41:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:69:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6208:69:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6134:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6146:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6157:4:6",
														"type": ""
													}
												],
												"src": "6066:218:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6355:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6372:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6395:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6377:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6377:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6365:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6365:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6365:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6343:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6350:3:6",
														"type": ""
													}
												],
												"src": "6290:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6509:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6526:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6531:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6519:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6519:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6519:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6547:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6566:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6571:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6562:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6562:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6547:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6481:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6486:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6497:11:6",
														"type": ""
													}
												],
												"src": "6414:168:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6694:48:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6716:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6724:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6712:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6712:14:6"
																	},
																	{
																		"hexValue": "30783030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6728:6:6",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6705:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6705:30:6"
														}
													]
												},
												"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6686:6:6",
														"type": ""
													}
												],
												"src": "6588:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6893:218:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6903:72:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6968:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6973:1:6",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6910:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:65:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6903:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7073:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"nodeType": "YulIdentifier",
																	"src": "6984:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6984:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6984:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7086:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7097:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7102:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7093:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7093:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7086:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6881:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6889:3:6",
														"type": ""
													}
												],
												"src": "6748:363:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7399:577:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7409:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7421:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7432:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7417:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7417:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7409:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7490:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7514:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7499:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7446:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7446:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7446:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7571:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7584:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7595:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7580:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7580:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7527:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7527:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7527:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7653:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7666:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7677:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7662:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7662:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7609:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7609:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7609:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7735:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7748:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7759:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7744:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7744:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7691:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7691:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7784:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7795:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7780:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7780:19:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7805:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7811:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7801:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7801:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7773:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7773:49:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7773:49:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7831:138:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7964:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7839:123:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7839:130:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7831:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7347:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7359:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7367:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7375:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7383:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7394:4:6",
														"type": ""
													}
												],
												"src": "7117:859:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8010:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8027:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8030:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8020:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8020:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8124:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8127:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8117:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8117:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8117:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8148:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8151:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8141:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8141:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8141:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7982:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8213:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8223:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8246:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8228:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8228:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8223:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8257:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8280:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8262:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8257:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8304:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8306:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8306:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8306:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8298:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8301:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8295:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8295:8:6"
															},
															"nodeType": "YulIf",
															"src": "8292:34:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8336:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8348:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8351:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8344:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8344:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8336:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8199:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8202:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8208:4:6",
														"type": ""
													}
												],
												"src": "8168:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8409:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8419:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8442:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8424:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8424:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8419:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8453:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8476:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8458:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8458:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8453:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8616:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8618:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8618:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8618:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8537:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8544:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8612:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8540:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8540:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8534:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8534:81:6"
															},
															"nodeType": "YulIf",
															"src": "8531:107:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8648:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8659:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8662:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8655:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8655:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8648:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8396:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8399:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8405:3:6",
														"type": ""
													}
												],
												"src": "8365:305:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC1155_$121_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$121_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$121__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$121_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(memPtr) {\n\n        mstore(add(memPtr, 0), \"0x00\")\n\n    }\n\n    function abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 4)\n        store_literal_in_memory_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806316934fc4146100675780632def662014610099578063583d42fd146100a35780637b0472f0146100d3578063b8e33fb2146100ef578063f23a6e611461010d575b600080fd5b610081600480360381019061007c919061055e565b61013d565b604051610090939291906105a4565b60405180910390f35b6100a1610167565b005b6100bd60048036038101906100b8919061055e565b61037b565b6040516100ca91906105db565b60405180910390f35b6100ed60048036038101906100e89190610622565b610393565b005b6100f76104a3565b60405161010491906106c1565b60405180910390f35b61012760048036038101906101229190610741565b6104c7565b6040516101349190610816565b60405180910390f35b60016020528060005260406000206000915090508060000154908060010154908060020154905083565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3033600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546040518563ffffffff1660e01b815260040161024a949392919061089d565b600060405180830381600087803b15801561026457600080fd5b505af1158015610278573d6000803e3d6000fd5b50505050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426102ca9190610924565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103189190610958565b92505081905550600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160009055600182016000905560028201600090555050565b60026020528060005260406000206000915090505481565b604051806060016040528083815260200182815260200142815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015590505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b815260040161046d949392919061089d565b600060405180830381600087803b15801561048757600080fd5b505af115801561049b573d6000803e3d6000fd5b505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf9790509695505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061052b82610500565b9050919050565b61053b81610520565b811461054657600080fd5b50565b60008135905061055881610532565b92915050565b600060208284031215610574576105736104f6565b5b600061058284828501610549565b91505092915050565b6000819050919050565b61059e8161058b565b82525050565b60006060820190506105b96000830186610595565b6105c66020830185610595565b6105d36040830184610595565b949350505050565b60006020820190506105f06000830184610595565b92915050565b6105ff8161058b565b811461060a57600080fd5b50565b60008135905061061c816105f6565b92915050565b60008060408385031215610639576106386104f6565b5b60006106478582860161060d565b92505060206106588582860161060d565b9150509250929050565b6000819050919050565b600061068761068261067d84610500565b610662565b610500565b9050919050565b60006106998261066c565b9050919050565b60006106ab8261068e565b9050919050565b6106bb816106a0565b82525050565b60006020820190506106d660008301846106b2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610701576107006106dc565b5b8235905067ffffffffffffffff81111561071e5761071d6106e1565b5b60208301915083600182028301111561073a576107396106e6565b5b9250929050565b60008060008060008060a0878903121561075e5761075d6104f6565b5b600061076c89828a01610549565b965050602061077d89828a01610549565b955050604061078e89828a0161060d565b945050606061079f89828a0161060d565b935050608087013567ffffffffffffffff8111156107c0576107bf6104fb565b5b6107cc89828a016106eb565b92509250509295509295509295565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610810816107db565b82525050565b600060208201905061082b6000830184610807565b92915050565b61083a81610520565b82525050565b600082825260208201905092915050565b7f3078303000000000000000000000000000000000000000000000000000000000600082015250565b6000610887600483610840565b915061089282610851565b602082019050919050565b600060a0820190506108b26000830187610831565b6108bf6020830186610831565b6108cc6040830185610595565b6108d96060830184610595565b81810360808301526108ea8161087a565b905095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061092f8261058b565b915061093a8361058b565b92508282101561094d5761094c6108f5565b5b828203905092915050565b60006109638261058b565b915061096e8361058b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109a3576109a26108f5565b5b82820190509291505056fea2646970667358221220e76ef1d2d322b03ff03a2e4d638d551f0038009d5ef7c4d4eed95ada809e88f464736f6c634300080e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2DEF6620 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x7B0472F0 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA1 PUSH2 0x167 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xBD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x55E JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x924 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x958 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x46D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x89D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x49B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52B DUP3 PUSH2 0x500 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53B DUP2 PUSH2 0x520 JUMP JUMPDEST DUP2 EQ PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x558 DUP2 PUSH2 0x532 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x574 JUMPI PUSH2 0x573 PUSH2 0x4F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP5 DUP3 DUP6 ADD PUSH2 0x549 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59E DUP2 PUSH2 0x58B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x5B9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x595 JUMP JUMPDEST PUSH2 0x5C6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH2 0x5D3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5FF DUP2 PUSH2 0x58B JUMP JUMPDEST DUP2 EQ PUSH2 0x60A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x61C DUP2 PUSH2 0x5F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x639 JUMPI PUSH2 0x638 PUSH2 0x4F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x647 DUP6 DUP3 DUP7 ADD PUSH2 0x60D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x658 DUP6 DUP3 DUP7 ADD PUSH2 0x60D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x687 PUSH2 0x682 PUSH2 0x67D DUP5 PUSH2 0x500 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x699 DUP3 PUSH2 0x66C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AB DUP3 PUSH2 0x68E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6BB DUP2 PUSH2 0x6A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6D6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x701 JUMPI PUSH2 0x700 PUSH2 0x6DC JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71E JUMPI PUSH2 0x71D PUSH2 0x6E1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x73A JUMPI PUSH2 0x739 PUSH2 0x6E6 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x75E JUMPI PUSH2 0x75D PUSH2 0x4F6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x76C DUP10 DUP3 DUP11 ADD PUSH2 0x549 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x77D DUP10 DUP3 DUP11 ADD PUSH2 0x549 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x78E DUP10 DUP3 DUP11 ADD PUSH2 0x60D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x79F DUP10 DUP3 DUP11 ADD PUSH2 0x60D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0x4FB JUMP JUMPDEST JUMPDEST PUSH2 0x7CC DUP10 DUP3 DUP11 ADD PUSH2 0x6EB JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x810 DUP2 PUSH2 0x7DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x82B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x807 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x83A DUP2 PUSH2 0x520 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078303000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x887 PUSH1 0x4 DUP4 PUSH2 0x840 JUMP JUMPDEST SWAP2 POP PUSH2 0x892 DUP3 PUSH2 0x851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x8B2 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x8BF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x831 JUMP JUMPDEST PUSH2 0x8CC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x595 JUMP JUMPDEST PUSH2 0x8D9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x595 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x8EA DUP2 PUSH2 0x87A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x92F DUP3 PUSH2 0x58B JUMP JUMPDEST SWAP2 POP PUSH2 0x93A DUP4 PUSH2 0x58B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x94D JUMPI PUSH2 0x94C PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x963 DUP3 PUSH2 0x58B JUMP JUMPDEST SWAP2 POP PUSH2 0x96E DUP4 PUSH2 0x58B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x9A3 JUMPI PUSH2 0x9A2 PUSH2 0x8F5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 PUSH15 0xF1D2D322B03FF03A2E4D638D551F00 CODESIZE STOP SWAP14 0x5E 0xF7 0xC4 0xD4 0xEE 0xD9 GAS 0xDA DUP1 SWAP15 DUP9 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
							"sourceMap": "199:1335:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;943:283;;;:::i;:::-;;501:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;704:230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;225:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1241:288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;411:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;943:283::-;980:9;;;;;;;;;;:26;;;1015:4;1022:10;1034:6;:18;1041:10;1034:18;;;;;;;;;;;;;;;:26;;;1062:6;:18;1069:10;1062:18;;;;;;;;;;;;;;;:25;;;980:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1153:6;:18;1160:10;1153:18;;;;;;;;;;;;;;;:28;;;1135:15;:46;;;;:::i;:::-;1107:11;:23;1119:10;1107:23;;;;;;;;;;;;;;;;:75;;;;;;;:::i;:::-;;;;;;;;1200:6;:18;1207:10;1200:18;;;;;;;;;;;;;;;;1193:25;;;;;;;;;;;;;;;;;;;;943:283::o;501:46::-;;;;;;;;;;;;;;;;;:::o;704:230::-;793:41;;;;;;;;799:8;793:41;;;;809:7;793:41;;;;818:15;793:41;;;772:6;:18;779:10;772:18;;;;;;;;;;;;;;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;846:9;;;;;;;;;;:26;;;873:10;893:4;900:8;910:7;846:80;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;704:230;;:::o;225:25::-;;;;;;;;;;;;:::o;1241:288::-;1418:6;1451:69;1437:84;;1241:288;;;;;;;;:::o;88:117:6:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:442::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1664:72;1732:2;1721:9;1717:18;1708:6;1664:72;:::i;:::-;1746;1814:2;1803:9;1799:18;1790:6;1746:72;:::i;:::-;1383:442;;;;;;:::o;1831:222::-;1924:4;1962:2;1951:9;1947:18;1939:26;;1975:71;2043:1;2032:9;2028:17;2019:6;1975:71;:::i;:::-;1831:222;;;;:::o;2059:122::-;2132:24;2150:5;2132:24;:::i;:::-;2125:5;2122:35;2112:63;;2171:1;2168;2161:12;2112:63;2059:122;:::o;2187:139::-;2233:5;2271:6;2258:20;2249:29;;2287:33;2314:5;2287:33;:::i;:::-;2187:139;;;;:::o;2332:474::-;2400:6;2408;2457:2;2445:9;2436:7;2432:23;2428:32;2425:119;;;2463:79;;:::i;:::-;2425:119;2583:1;2608:53;2653:7;2644:6;2633:9;2629:22;2608:53;:::i;:::-;2598:63;;2554:117;2710:2;2736:53;2781:7;2772:6;2761:9;2757:22;2736:53;:::i;:::-;2726:63;;2681:118;2332:474;;;;;:::o;2812:60::-;2840:3;2861:5;2854:12;;2812:60;;;:::o;2878:142::-;2928:9;2961:53;2979:34;2988:24;3006:5;2988:24;:::i;:::-;2979:34;:::i;:::-;2961:53;:::i;:::-;2948:66;;2878:142;;;:::o;3026:126::-;3076:9;3109:37;3140:5;3109:37;:::i;:::-;3096:50;;3026:126;;;:::o;3158:142::-;3224:9;3257:37;3288:5;3257:37;:::i;:::-;3244:50;;3158:142;;;:::o;3306:163::-;3409:53;3456:5;3409:53;:::i;:::-;3404:3;3397:66;3306:163;;:::o;3475:254::-;3584:4;3622:2;3611:9;3607:18;3599:26;;3635:87;3719:1;3708:9;3704:17;3695:6;3635:87;:::i;:::-;3475:254;;;;:::o;3735:117::-;3844:1;3841;3834:12;3858:117;3967:1;3964;3957:12;3981:117;4090:1;4087;4080:12;4117:552;4174:8;4184:6;4234:3;4227:4;4219:6;4215:17;4211:27;4201:122;;4242:79;;:::i;:::-;4201:122;4355:6;4342:20;4332:30;;4385:18;4377:6;4374:30;4371:117;;;4407:79;;:::i;:::-;4371:117;4521:4;4513:6;4509:17;4497:29;;4575:3;4567:4;4559:6;4555:17;4545:8;4541:32;4538:41;4535:128;;;4582:79;;:::i;:::-;4535:128;4117:552;;;;;:::o;4675:1109::-;4781:6;4789;4797;4805;4813;4821;4870:3;4858:9;4849:7;4845:23;4841:33;4838:120;;;4877:79;;:::i;:::-;4838:120;4997:1;5022:53;5067:7;5058:6;5047:9;5043:22;5022:53;:::i;:::-;5012:63;;4968:117;5124:2;5150:53;5195:7;5186:6;5175:9;5171:22;5150:53;:::i;:::-;5140:63;;5095:118;5252:2;5278:53;5323:7;5314:6;5303:9;5299:22;5278:53;:::i;:::-;5268:63;;5223:118;5380:2;5406:53;5451:7;5442:6;5431:9;5427:22;5406:53;:::i;:::-;5396:63;;5351:118;5536:3;5525:9;5521:19;5508:33;5568:18;5560:6;5557:30;5554:117;;;5590:79;;:::i;:::-;5554:117;5703:64;5759:7;5750:6;5739:9;5735:22;5703:64;:::i;:::-;5685:82;;;;5479:298;4675:1109;;;;;;;;:::o;5790:149::-;5826:7;5866:66;5859:5;5855:78;5844:89;;5790:149;;;:::o;5945:115::-;6030:23;6047:5;6030:23;:::i;:::-;6025:3;6018:36;5945:115;;:::o;6066:218::-;6157:4;6195:2;6184:9;6180:18;6172:26;;6208:69;6274:1;6263:9;6259:17;6250:6;6208:69;:::i;:::-;6066:218;;;;:::o;6290:118::-;6377:24;6395:5;6377:24;:::i;:::-;6372:3;6365:37;6290:118;;:::o;6414:168::-;6497:11;6531:6;6526:3;6519:19;6571:4;6566:3;6562:14;6547:29;;6414:168;;;;:::o;6588:154::-;6728:6;6724:1;6716:6;6712:14;6705:30;6588:154;:::o;6748:363::-;6889:3;6910:65;6973:1;6968:3;6910:65;:::i;:::-;6903:72;;6984:93;7073:3;6984:93;:::i;:::-;7102:2;7097:3;7093:12;7086:19;;6748:363;;;:::o;7117:859::-;7394:4;7432:3;7421:9;7417:19;7409:27;;7446:71;7514:1;7503:9;7499:17;7490:6;7446:71;:::i;:::-;7527:72;7595:2;7584:9;7580:18;7571:6;7527:72;:::i;:::-;7609;7677:2;7666:9;7662:18;7653:6;7609:72;:::i;:::-;7691;7759:2;7748:9;7744:18;7735:6;7691:72;:::i;:::-;7811:9;7805:4;7801:20;7795:3;7784:9;7780:19;7773:49;7839:130;7964:4;7839:130;:::i;:::-;7831:138;;7117:859;;;;;;;:::o;7982:180::-;8030:77;8027:1;8020:88;8127:4;8124:1;8117:15;8151:4;8148:1;8141:15;8168:191;8208:4;8228:20;8246:1;8228:20;:::i;:::-;8223:25;;8262:20;8280:1;8262:20;:::i;:::-;8257:25;;8301:1;8298;8295:8;8292:34;;;8306:18;;:::i;:::-;8292:34;8351:1;8348;8344:9;8336:17;;8168:191;;;;:::o;8365:305::-;8405:3;8424:20;8442:1;8424:20;:::i;:::-;8419:25;;8458:20;8476:1;8458:20;:::i;:::-;8453:25;;8612:1;8544:66;8540:74;8537:1;8534:81;8531:107;;;8618:18;;:::i;:::-;8531:107;8662:1;8659;8655:9;8648:16;;8365:305;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "506400",
								"executionCost": "24810",
								"totalCost": "531210"
							},
							"external": {
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"parentNFT()": "infinite",
								"stake(uint256,uint256)": "infinite",
								"stakes(address)": "infinite",
								"stakingTime(address)": "2836",
								"unstake()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 696,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 696,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 560,
									"end": 696,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 560,
									"end": 696,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 606,
									"end": 648,
									"name": "PUSH",
									"source": 5,
									"value": "7DD42E364A7BC874B629047A493FD758A578C1AD"
								},
								{
									"begin": 585,
									"end": 594,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 585,
									"end": 594,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 585,
									"end": 649,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 649,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 585,
									"end": 649,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 585,
									"end": 649,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 1534,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e76ef1d2d322b03ff03a2e4d638d551f0038009d5ef7c4d4eed95ada809e88f464736f6c634300080e0033",
									".code": [
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "16934FC4"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "2DEF6620"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "583D42FD"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "7B0472F0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "B8E33FB2"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "F23A6E61"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 199,
											"end": 1534,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 411,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 411,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 411,
											"end": 450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 943,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 501,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 501,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 704,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 704,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 225,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1241,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1241,
											"end": 1529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 411,
											"end": 450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 411,
											"end": 450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 943,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 980,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 989,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1006,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1006,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1006,
											"name": "PUSH",
											"source": 5,
											"value": "F242432A"
										},
										{
											"begin": 1015,
											"end": 1019,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1022,
											"end": 1032,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1051,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1052,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1060,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1060,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1060,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1079,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1080,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1087,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1062,
											"end": 1087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1062,
											"end": 1087,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 980,
											"end": 1096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1170,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1171,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1181,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1153,
											"end": 1181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1181,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1135,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1135,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1119,
											"end": 1129,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1107,
											"end": 1182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1107,
											"end": 1182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1217,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 943,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 704,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 799,
											"end": 807,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 809,
											"end": 816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 818,
											"end": 833,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 793,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 778,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 789,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 790,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 772,
											"end": 834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 772,
											"end": 834,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 846,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 846,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 872,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 846,
											"end": 872,
											"name": "PUSH",
											"source": 5,
											"value": "F242432A"
										},
										{
											"begin": 873,
											"end": 883,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 893,
											"end": 897,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 900,
											"end": 908,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 910,
											"end": 917,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 846,
											"end": 926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 846,
											"end": 926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 846,
											"end": 926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 704,
											"end": 934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 225,
											"end": 250,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 225,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1418,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1451,
											"end": 1520,
											"name": "PUSH",
											"source": 5,
											"value": "F23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97"
										},
										{
											"begin": 1437,
											"end": 1521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1437,
											"end": 1521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1241,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1732,
											"end": 1734,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1664,
											"end": 1736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1664,
											"end": 1736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1814,
											"end": 1816,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1790,
											"end": 1796,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1746,
											"end": 1818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1746,
											"end": 1818,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 1965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2043,
											"end": 2044,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2028,
											"end": 2045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2025,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1975,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1975,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 2053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2150,
											"end": 2155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2132,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2132,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2125,
											"end": 2130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2157,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2112,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2233,
											"end": 2238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2258,
											"end": 2278,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2287,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2287,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2414,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2445,
											"end": 2454,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2436,
											"end": 2443,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2460,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2463,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2463,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2425,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2653,
											"end": 2660,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2642,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2608,
											"end": 2661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2608,
											"end": 2661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2671,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2770,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2736,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2736,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2789,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2789,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 2799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2872,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2812,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2812,
											"end": 2872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2979,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3006,
											"end": 3011,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2988,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2979,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2979,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2961,
											"end": 3014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2961,
											"end": 3014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 3020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 3020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3152,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3026,
											"end": 3152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3140,
											"end": 3145,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3109,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3146,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3109,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3096,
											"end": 3146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3152,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3300,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3158,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3224,
											"end": 3233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3288,
											"end": 3293,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 3257,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 3294,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 3257,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3294,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3294,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3469,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3306,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3409,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3409,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3404,
											"end": 3407,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3463,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3306,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3729,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3475,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3584,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3611,
											"end": 3620,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3599,
											"end": 3625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3719,
											"end": 3720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3717,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3721,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3635,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3635,
											"end": 3722,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3635,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3729,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3735,
											"end": 3852,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3735,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3844,
											"end": 3845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3846,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3858,
											"end": 3975,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3858,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3967,
											"end": 3968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3965,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3969,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 4098,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3981,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4092,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4669,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 4117,
											"end": 4669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4174,
											"end": 4182,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4234,
											"end": 4237,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4227,
											"end": 4231,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4219,
											"end": 4225,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4215,
											"end": 4232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4211,
											"end": 4238,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4201,
											"end": 4323,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 4242,
											"end": 4321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4242,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4201,
											"end": 4323,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 4201,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4342,
											"end": 4362,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4332,
											"end": 4362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4385,
											"end": 4403,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4377,
											"end": 4383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4374,
											"end": 4404,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4488,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4371,
											"end": 4488,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4407,
											"end": 4486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4407,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4488,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 4371,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4521,
											"end": 4525,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4497,
											"end": 4526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4555,
											"end": 4572,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4545,
											"end": 4553,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4541,
											"end": 4573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4538,
											"end": 4579,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4663,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4535,
											"end": 4663,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4582,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 4582,
											"end": 4661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4582,
											"end": 4661,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4582,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4535,
											"end": 4663,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 4535,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4669,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4669,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4870,
											"end": 4873,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4858,
											"end": 4867,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4856,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4841,
											"end": 4874,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4958,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4838,
											"end": 4958,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4877,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 4877,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4958,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 4838,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5067,
											"end": 5074,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5043,
											"end": 5065,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 5022,
											"end": 5075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5022,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5075,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4968,
											"end": 5085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5124,
											"end": 5126,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5150,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5195,
											"end": 5202,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5175,
											"end": 5184,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5193,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 5150,
											"end": 5203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5203,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5150,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5203,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 5203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5095,
											"end": 5213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5252,
											"end": 5254,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5278,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5323,
											"end": 5330,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5312,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5299,
											"end": 5321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5278,
											"end": 5331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5278,
											"end": 5331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5278,
											"end": 5331,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5278,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5331,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5380,
											"end": 5382,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5406,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5451,
											"end": 5458,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5431,
											"end": 5440,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5406,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5406,
											"end": 5459,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5406,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5396,
											"end": 5459,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5396,
											"end": 5459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5536,
											"end": 5539,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5508,
											"end": 5541,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5560,
											"end": 5566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5587,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5671,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5554,
											"end": 5671,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5590,
											"end": 5669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5590,
											"end": 5669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5554,
											"end": 5671,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5554,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5703,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5759,
											"end": 5766,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5756,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5739,
											"end": 5748,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 5735,
											"end": 5757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5703,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 5703,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5703,
											"end": 5767,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5703,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5767,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5685,
											"end": 5767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 5784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5939,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 5790,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5826,
											"end": 5833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5932,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5859,
											"end": 5864,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5933,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5933,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5939,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6060,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 5945,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6047,
											"end": 6052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6030,
											"end": 6053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6030,
											"end": 6053,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6030,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6018,
											"end": 6054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6284,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 6066,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6208,
											"end": 6277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6208,
											"end": 6277,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6208,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6284,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6066,
											"end": 6284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6408,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6290,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6395,
											"end": 6400,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 6377,
											"end": 6401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6377,
											"end": 6401,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6377,
											"end": 6401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6372,
											"end": 6375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6365,
											"end": 6402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6414,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6497,
											"end": 6508,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6529,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6519,
											"end": 6538,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6576,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6576,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6414,
											"end": 6582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6742,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6588,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6734,
											"name": "PUSH",
											"source": 6,
											"value": "3078303000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6724,
											"end": 6725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6712,
											"end": 6726,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6705,
											"end": 6735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6742,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7111,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6748,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6973,
											"end": 6974,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6968,
											"end": 6971,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6910,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 6910,
											"end": 6975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6910,
											"end": 6975,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 6910,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6975,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6903,
											"end": 6975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6984,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7073,
											"end": 7076,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6984,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6984,
											"end": 7077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6984,
											"end": 7077,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 6984,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7097,
											"end": 7100,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7093,
											"end": 7105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7086,
											"end": 7105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7111,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7111,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7111,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 7111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7432,
											"end": 7435,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7421,
											"end": 7430,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7417,
											"end": 7436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7409,
											"end": 7436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 7514,
											"end": 7515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7516,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7496,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7446,
											"end": 7517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 7446,
											"end": 7517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7595,
											"end": 7597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7580,
											"end": 7598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7571,
											"end": 7577,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7527,
											"end": 7599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7527,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7666,
											"end": 7675,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7662,
											"end": 7680,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7653,
											"end": 7659,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7609,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7609,
											"end": 7681,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 7609,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7759,
											"end": 7761,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7748,
											"end": 7757,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7691,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7691,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7811,
											"end": 7820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7805,
											"end": 7809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7801,
											"end": 7821,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7798,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7784,
											"end": 7793,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7780,
											"end": 7799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7773,
											"end": 7822,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7964,
											"end": 7968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 7839,
											"end": 7969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7969,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7839,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7831,
											"end": 7969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7831,
											"end": 7969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7982,
											"end": 8162,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 7982,
											"end": 8162,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8030,
											"end": 8107,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8027,
											"end": 8028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8127,
											"end": 8131,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8117,
											"end": 8132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8155,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8148,
											"end": 8149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8156,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8359,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 8168,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8246,
											"end": 8247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8228,
											"end": 8248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 8228,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8280,
											"end": 8281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8262,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8262,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8282,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8257,
											"end": 8282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8301,
											"end": 8302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8295,
											"end": 8303,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8292,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 8306,
											"end": 8324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8306,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8292,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8292,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8351,
											"end": 8352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8348,
											"end": 8349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8344,
											"end": 8353,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8336,
											"end": 8353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8336,
											"end": 8353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8359,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8359,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8670,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 8365,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8405,
											"end": 8408,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8442,
											"end": 8443,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8424,
											"end": 8444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8424,
											"end": 8444,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8424,
											"end": 8444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8419,
											"end": 8444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8419,
											"end": 8444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8476,
											"end": 8477,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8458,
											"end": 8478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8458,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8478,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8613,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8544,
											"end": 8610,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8540,
											"end": 8614,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8537,
											"end": 8538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8615,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8638,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8531,
											"end": 8638,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8618,
											"end": 8636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 8618,
											"end": 8636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8618,
											"end": 8636,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8618,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8531,
											"end": 8638,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 8531,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8659,
											"end": 8660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8655,
											"end": 8664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8648,
											"end": 8664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8648,
											"end": 8664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8670,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"parentNFT()": "b8e33fb2",
							"stake(uint256,uint256)": "7b0472f0",
							"stakes(address)": "16934fc4",
							"stakingTime(address)": "583d42fd",
							"unstake()": "2def6620"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"NftStaker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"staking.sol\":{\"keccak256\":\"0x681cdf87a9853ef8caae3d645673ce008b1e7a1e91934f081a2096489181952e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fff670bafb817688d7a9351ba69eba5c3c404649d7b8c157a3fca004ee3c10a\",\"dweb:/ipfs/QmXyFqokM5vA3MTXaVwJnmY6BjbQW1HHLNfhfKs8PzpSSW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 239,
								"contract": "staking.sol:NftStaker",
								"label": "parentNFT",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC1155)121"
							},
							{
								"astId": 251,
								"contract": "staking.sol:NftStaker",
								"label": "stakes",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Stake)246_storage)"
							},
							{
								"astId": 255,
								"contract": "staking.sol:NftStaker",
								"label": "stakingTime",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC1155)121": {
								"encoding": "inplace",
								"label": "contract IERC1155",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)246_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NftStaker.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)246_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)246_storage": {
								"encoding": "inplace",
								"label": "struct NftStaker.Stake",
								"members": [
									{
										"astId": 241,
										"contract": "staking.sol:NftStaker",
										"label": "tokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 243,
										"contract": "staking.sol:NftStaker",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 245,
										"contract": "staking.sol:NftStaker",
										"label": "timestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:38:9:\n   |\n38 |         address operator,\n   |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1294,
					"file": "staking.sol",
					"start": 1278
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:39:9:\n   |\n39 |         address from,\n   |         ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1317,
					"file": "staking.sol",
					"start": 1305
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:40:9:\n   |\n40 |         uint256 id,\n   |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1338,
					"file": "staking.sol",
					"start": 1328
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:41:9:\n   |\n41 |         uint256 value,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1362,
					"file": "staking.sol",
					"start": 1349
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> staking.sol:42:9:\n   |\n42 |         bytes calldata data\n   |         ^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1392,
					"file": "staking.sol",
					"start": 1373
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> staking.sol:37:6:\n   |\n37 |      function onERC1155Received(\n   |      ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 1529,
					"file": "staking.sol",
					"start": 1241
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							121
						],
						"IERC165": [
							232
						]
					},
					"id": 122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 122,
							"sourceUnit": 233,
							"src": "120:47:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "357:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121,
								232
							],
							"name": "IERC1155",
							"nameLocation": "345:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 18,
									"name": "TransferSingle",
									"nameLocation": "503:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "518:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "544:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "566:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "586:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 15,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:0"
									},
									"src": "497:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 33,
									"name": "TransferBatch",
									"nameLocation": "774:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "797:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 20,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "831:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "861:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 26,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 27,
													"nodeType": "ArrayTypeName",
													"src": "889:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "912:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 29,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 30,
													"nodeType": "ArrayTypeName",
													"src": "912:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:0"
									},
									"src": "768:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 42,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1114:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1139:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "1165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:0"
									},
									"src": "1093:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 49,
									"name": "URI",
									"nameLocation": "1540:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1558:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:0"
									},
									"src": "1534:44:0"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1781:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1798:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:0"
									},
									"scope": 121,
									"src": "1762:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2065:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2094:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 64,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 65,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2165:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 68,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 69,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:0"
									},
									"scope": 121,
									"src": "2041:142:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 73,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2469:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:0"
									},
									"scope": 121,
									"src": "2442:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:0"
									},
									"scope": 121,
									"src": "2657:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3374:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3414:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "3438:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:0"
									},
									"scope": 121,
									"src": "3317:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3914:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3936:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3956:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 110,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 111,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3988:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 113,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4024:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:0"
									},
									"scope": 121,
									"src": "3874:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 122,
							"src": "335:3726:0",
							"usedErrors": []
						}
					],
					"src": "95:3967:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							232
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "118:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 233,
							"src": "143:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 126,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "262:7:1"
									},
									"id": 127,
									"nodeType": "InheritanceSpecifier",
									"src": "262:7:1"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 125,
								"nodeType": "StructuredDocumentation",
								"src": "192:39:1",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								232
							],
							"name": "IERC1155Receiver",
							"nameLocation": "242:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "276:826:1",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1116:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1199:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1191:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1211:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1234:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:126:1"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1278:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 140,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1278:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1277:8:1"
									},
									"scope": 162,
									"src": "1107:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1292:994:1",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2300:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2340:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2332:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2366:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2358:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2399:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2380:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 149,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2380:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 150,
													"nodeType": "ArrayTypeName",
													"src": "2380:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2431:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2412:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2412:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 153,
													"nodeType": "ArrayTypeName",
													"src": "2412:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2462:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2447:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:150:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "2491:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 158,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2491:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2490:8:1"
									},
									"scope": 162,
									"src": "2291:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "232:2269:1",
							"usedErrors": []
						}
					],
					"src": "118:2384:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							196
						],
						"ERC165": [
							220
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							232
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 163,
							"src": "133:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 221,
							"src": "167:49:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 168,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "295:6:2"
									},
									"id": 169,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:2"
								},
								{
									"baseName": {
										"id": 170,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "303:16:2"
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:2"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 167,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								162,
								220,
								232
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										219,
										231
									],
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "495:113:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 182,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "512:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 184,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 162,
																		"src": "532:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$162_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 183,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$162",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 190,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "589:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 188,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$196_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "565:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 181,
												"id": 193,
												"nodeType": "Return",
												"src": "505:96:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 178,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 176,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 220,
												"src": "463:6:2"
											},
											{
												"id": 177,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 232,
												"src": "471:7:2"
											}
										],
										"src": "454:25:2"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "414:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "489:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:2"
									},
									"scope": 196,
									"src": "387:221:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 197,
							"src": "258:352:2",
							"usedErrors": []
						}
					],
					"src": "108:503:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							220
						],
						"IERC165": [
							232
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 233,
							"src": "124:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 201,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "754:7:3"
									},
									"id": 202,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 200,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								232
							],
							"name": "ERC165",
							"nameLocation": "744:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										231
									],
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "920:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 211,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "937:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 213,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "957:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$232_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$232_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 212,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$232",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 210,
												"id": 217,
												"nodeType": "Return",
												"src": "930:47:3"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:3"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "856:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 204,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:3"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:3"
									},
									"scope": 220,
									"src": "829:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 221,
							"src": "726:260:3",
							"usedErrors": []
						}
					],
					"src": "99:888:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC165",
							"nameLocation": "415:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "801:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 225,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "844:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:4"
									},
									"scope": 232,
									"src": "774:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "405:447:4",
							"usedErrors": []
						}
					],
					"src": "100:753:4"
				},
				"id": 4
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							196
						],
						"ERC165": [
							220
						],
						"IERC1155": [
							121
						],
						"IERC1155Receiver": [
							162
						],
						"IERC165": [
							232
						],
						"NftStaker": [
							370
						]
					},
					"id": 371,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 371,
							"sourceUnit": 122,
							"src": "60:60:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 371,
							"sourceUnit": 197,
							"src": "122:73:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "NftStaker",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 370,
							"linearizedBaseContracts": [
								370
							],
							"name": "NftStaker",
							"nameLocation": "208:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 239,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "241:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "225:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC1155_$121",
										"typeString": "contract IERC1155"
									},
									"typeName": {
										"id": 238,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 237,
											"name": "IERC1155",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 121,
											"src": "225:8:5"
										},
										"referencedDeclaration": 121,
										"src": "225:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC1155_$121",
											"typeString": "contract IERC1155"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NftStaker.Stake",
									"id": 246,
									"members": [
										{
											"constant": false,
											"id": 241,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "291:7:5",
											"nodeType": "VariableDeclaration",
											"scope": 246,
											"src": "283:15:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 240,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "283:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 243,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "317:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 246,
											"src": "309:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 242,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "309:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 245,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "342:9:5",
											"nodeType": "VariableDeclaration",
											"scope": 246,
											"src": "334:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 244,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "334:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "266:5:5",
									"nodeType": "StructDefinition",
									"scope": 370,
									"src": "259:100:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 251,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "444:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "411:39:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
										"typeString": "mapping(address => struct NftStaker.Stake)"
									},
									"typeName": {
										"id": 250,
										"keyType": {
											"id": 247,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "419:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "411:25:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
											"typeString": "mapping(address => struct NftStaker.Stake)"
										},
										"valueType": {
											"id": 249,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 248,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 246,
												"src": "430:5:5"
											},
											"referencedDeclaration": 246,
											"src": "430:5:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$246_storage_ptr",
												"typeString": "struct NftStaker.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "583d42fd",
									"id": 255,
									"mutability": "mutable",
									"name": "stakingTime",
									"nameLocation": "536:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 370,
									"src": "501:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 254,
										"keyType": {
											"id": 252,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "509:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "501:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 253,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "574:122:5",
										"statements": [
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 258,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "585:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$121",
															"typeString": "contract IERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307837444434324533363461374263383734623632393034374134393346643735386135373843314164",
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "606:42:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x7DD42E364a7Bc874b629047A493Fd758a578C1Ad"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "IERC1155",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "597:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1155_$121_$",
																"typeString": "type(contract IERC1155)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "597:52:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC1155_$121",
															"typeString": "contract IERC1155"
														}
													},
													"src": "585:64:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1155_$121",
														"typeString": "contract IERC1155"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "585:64:5"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "571:2:5"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:0:5"
									},
									"scope": 370,
									"src": "560:136:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "761:173:5",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 272,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "772:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
															}
														},
														"id": 275,
														"indexExpression": {
															"expression": {
																"id": 273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "779:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "779:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "772:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$246_storage",
															"typeString": "struct NftStaker.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 277,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "799:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 278,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "809:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 279,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "818:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "818:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 276,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 246,
															"src": "793:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$246_storage_ptr_$",
																"typeString": "type(struct NftStaker.Stake storage pointer)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "793:41:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$246_memory_ptr",
															"typeString": "struct NftStaker.Stake memory"
														}
													},
													"src": "772:62:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$246_storage",
														"typeString": "struct NftStaker.Stake storage ref"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "772:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 287,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "873:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "873:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 291,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "893:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																],
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "885:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 289,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "885:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "885:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 267,
															"src": "900:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 294,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "910:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30783030",
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "919:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															},
															"value": "0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															}
														],
														"expression": {
															"id": 284,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "846:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$121",
																"typeString": "contract IERC1155"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "846:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "846:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "846:80:5"
											}
										]
									},
									"functionSelector": "7b0472f0",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "713:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "727:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "719:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:35:5"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "761:0:5"
									},
									"scope": 370,
									"src": "704:230:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "969:257:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 307,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1015:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NftStaker_$370",
																		"typeString": "contract NftStaker"
																	}
																],
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1007:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 305,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1007:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1007:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 309,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1022:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1022:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 311,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1034:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																		"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																	}
																},
																"id": 314,
																"indexExpression": {
																	"expression": {
																		"id": 312,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1041:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1041:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1034:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$246_storage",
																	"typeString": "struct NftStaker.Stake storage ref"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 241,
															"src": "1034:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 316,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1062:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																		"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																	}
																},
																"id": 319,
																"indexExpression": {
																	"expression": {
																		"id": 317,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1069:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1069:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1062:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$246_storage",
																	"typeString": "struct NftStaker.Stake storage ref"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 243,
															"src": "1062:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30783030",
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1089:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															},
															"value": "0x00"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																"typeString": "literal_string \"0x00\""
															}
														],
														"expression": {
															"id": 302,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "980:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$121",
																"typeString": "contract IERC1155"
															}
														},
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 104,
														"src": "980:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:116:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "980:116:5"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 324,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1107:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 327,
														"indexExpression": {
															"expression": {
																"id": 325,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1119:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1119:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1107:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 328,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1135:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1135:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 330,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 251,
																			"src": "1153:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																				"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
																			}
																		},
																		"id": 333,
																		"indexExpression": {
																			"expression": {
																				"id": 331,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1160:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1160:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1153:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$246_storage",
																			"typeString": "struct NftStaker.Stake storage ref"
																		}
																	},
																	"id": 334,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 245,
																	"src": "1153:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1135:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 336,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1134:48:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1107:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "1107:75:5"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1193:25:5",
													"subExpression": {
														"baseExpression": {
															"id": 339,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1200:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$246_storage_$",
																"typeString": "mapping(address => struct NftStaker.Stake storage ref)"
															}
														},
														"id": 342,
														"indexExpression": {
															"expression": {
																"id": 340,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1207:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1207:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1200:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$246_storage",
															"typeString": "struct NftStaker.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "1193:25:5"
											}
										]
									},
									"functionSelector": "2def6620",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "952:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:2:5"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:0:5"
									},
									"scope": 370,
									"src": "943:283:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "1426:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e45524331313535526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																	"id": 364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1461:58:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	},
																	"value": "onERC1155Received(address,address,uint256,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 363,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1451:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1451:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1444:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 361,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1444:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1444:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 360,
												"id": 367,
												"nodeType": "Return",
												"src": "1437:84:5"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1250:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1286:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1278:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1278:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1313:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1305:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1336:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1328:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1357:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1349:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1349:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1388:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1373:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1373:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:132:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "1418:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 358,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1418:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:8:5"
									},
									"scope": 370,
									"src": "1241:288:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 371,
							"src": "199:1335:5",
							"usedErrors": []
						}
					],
					"src": "33:1501:5"
				},
				"id": 5
			}
		}
	}
}